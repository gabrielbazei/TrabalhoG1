/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trabalhog1;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import javax.swing.ListModel;
/**
 *
 * @author bazei
 */
public class Interface extends javax.swing.JFrame implements Serializable{

    /**
     * Creates new form Interface
     */
    private Atendimento toAlter = new Atendimento();
    public Interface() {
        initComponents();
        lblVerificaBanco.setVisible(false);
        servicos.setVisible(false);
        Clientes.setVisible(false);
        Funcionarios.setVisible(false);
        Atendimentos.setVisible(false);
        Agenda.setVisible(false);
        marcarhorario.setVisible(false);
        remarcarhorario.setVisible(false);
        relatorios.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuPrincipal = new javax.swing.JPanel();
        lblMenuPrincipal = new javax.swing.JLabel();
        btnMenuServico = new javax.swing.JButton();
        btnMenuCliente = new javax.swing.JButton();
        btnMenuFuncionario = new javax.swing.JButton();
        btnMenuAtendimento = new javax.swing.JButton();
        btnMenuAgenda = new javax.swing.JButton();
        btnMenuMarcar = new javax.swing.JButton();
        btnMenuRemarcar = new javax.swing.JButton();
        btnMenuRelatorios = new javax.swing.JButton();
        lblVerificaBanco = new javax.swing.JLabel();
        servicos = new javax.swing.JPanel();
        btnBackServ = new javax.swing.JButton();
        lblTituloServico = new javax.swing.JLabel();
        txtNomeServ = new javax.swing.JTextField();
        btnCadastroServico = new javax.swing.JButton();
        jPanelServ = new javax.swing.JScrollPane();
        txtDescServ = new javax.swing.JTextArea();
        lblNomeServ = new javax.swing.JLabel();
        lblDescServ = new javax.swing.JLabel();
        lblErroServ = new javax.swing.JLabel();
        btnAltServ = new javax.swing.JToggleButton();
        btnVerfServ = new javax.swing.JButton();
        Clientes = new javax.swing.JPanel();
        btnBackCadCliente = new javax.swing.JButton();
        lblTituloClientes = new javax.swing.JLabel();
        btnCadastroCliente = new javax.swing.JButton();
        txtNomeCadClient = new javax.swing.JTextField();
        lblCastroNomeCliente = new javax.swing.JLabel();
        lblCadClienteCpf = new javax.swing.JLabel();
        txtCadClienteCpf = new javax.swing.JTextField();
        lblCadClienteTelefone = new javax.swing.JLabel();
        txtCadClienteTelefone = new javax.swing.JTextField();
        lblCadClienteEmail = new javax.swing.JLabel();
        txtCadClienteEmail = new javax.swing.JTextField();
        lblCadClienteEndereco = new javax.swing.JLabel();
        txtCadClienteEndereco = new javax.swing.JTextField();
        lblCadClienteNasc = new javax.swing.JLabel();
        txtCadClienteNasc = new javax.swing.JTextField();
        lblCadClienteTipo = new javax.swing.JLabel();
        txtCadClienteTipo = new javax.swing.JTextField();
        lblCadClienteEstCivil = new javax.swing.JLabel();
        txtCadClienteEstCivil = new javax.swing.JTextField();
        BtnTglSituacao = new javax.swing.JToggleButton();
        lblCadClienteSituacao = new javax.swing.JLabel();
        lblCadClienteErro = new javax.swing.JLabel();
        btnDeleteCliente = new javax.swing.JButton();
        lblDelCliente = new javax.swing.JLabel();
        btnConfDelCliente = new javax.swing.JButton();
        btnNegDelCliente = new javax.swing.JButton();
        btnAltClient = new javax.swing.JToggleButton();
        btnVerfClient = new javax.swing.JButton();
        Funcionarios = new javax.swing.JPanel();
        btnBackCadFunc = new javax.swing.JButton();
        lblTituloCadFunc = new javax.swing.JLabel();
        btnCadFunc = new javax.swing.JButton();
        txtCadFunc = new javax.swing.JTextField();
        lblCadFuncNome = new javax.swing.JLabel();
        lblCadFuncCpf = new javax.swing.JLabel();
        txtCadFuncCpf = new javax.swing.JTextField();
        lblCadFuncTel = new javax.swing.JLabel();
        txtCadFuncTel = new javax.swing.JTextField();
        lblCadFuncEmail = new javax.swing.JLabel();
        txtCadFuncEmail = new javax.swing.JTextField();
        lblCadFuncSituacao = new javax.swing.JLabel();
        lblCadFuncErro = new javax.swing.JLabel();
        btnDeleteFuncionario = new javax.swing.JButton();
        btnConfDelFunc = new javax.swing.JButton();
        btnNegDelFunc = new javax.swing.JButton();
        btnAltFunc = new javax.swing.JToggleButton();
        btnVerfFunc = new javax.swing.JButton();
        Atendimentos = new javax.swing.JPanel();
        btnBackAtendimentos = new javax.swing.JButton();
        lblTituloAtendimento = new javax.swing.JLabel();
        btnCadastroAtendimento = new javax.swing.JButton();
        lblDataAtendmiento = new javax.swing.JLabel();
        lblHorarioAtendmiento = new javax.swing.JLabel();
        txtHorarioAtendimento = new javax.swing.JTextField();
        lblFuncionariosAtendmiento = new javax.swing.JLabel();
        jpanelListaFuncAtendmiento = new javax.swing.JScrollPane();
        listFuncDispo = new javax.swing.JList<>();
        lblNomeClienteAtendmiento = new javax.swing.JLabel();
        lblStatusAtendmiento = new javax.swing.JLabel();
        panelStatusAtendimento = new javax.swing.JScrollPane();
        listStatusAtendmiento = new javax.swing.JList();
        lblDescAtendmiento = new javax.swing.JLabel();
        panelTxtAtendmiento = new javax.swing.JScrollPane();
        txtDescAtendmiento = new javax.swing.JTextArea();
        listClienteDispo = new javax.swing.JList<>();
        btnAltAtend = new javax.swing.JToggleButton();
        btnVerfAtend = new javax.swing.JButton();
        lblAtend = new javax.swing.JLabel();
        lblServAtend = new javax.swing.JLabel();
        txtDataAtendimento = new javax.swing.JTextField();
        listServAtend = new javax.swing.JList<>();
        Agenda = new javax.swing.JPanel();
        lblTituloAgenda = new javax.swing.JLabel();
        btnBackAgenda = new javax.swing.JButton();
        lblDataAgenda = new javax.swing.JLabel();
        btnVerfAgenda = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAgenDia = new javax.swing.JTextArea();
        txtDataAgenda = new javax.swing.JTextField();
        marcarhorario = new javax.swing.JPanel();
        lblTituloMarcar = new javax.swing.JLabel();
        btnBackMarcar = new javax.swing.JButton();
        lblDataMarcar = new javax.swing.JLabel();
        panelMarcar = new javax.swing.JScrollPane();
        listMarcFunc = new javax.swing.JList();
        txtHorarioMarcar = new javax.swing.JTextField();
        lblHorarioMarcar = new javax.swing.JLabel();
        btnVerfMarcar = new javax.swing.JButton();
        lblFuncMarcar = new javax.swing.JLabel();
        BtnCadMarcar = new javax.swing.JButton();
        listMarcCliente = new javax.swing.JList<>();
        lblClientHor = new javax.swing.JLabel();
        btnAltHor = new javax.swing.JToggleButton();
        lblMarc = new javax.swing.JLabel();
        btnVerfHoraDisp = new javax.swing.JButton();
        lblMarcServ = new javax.swing.JLabel();
        listMarcServ = new javax.swing.JList<>();
        txtDataMarcar = new javax.swing.JTextField();
        remarcarhorario = new javax.swing.JPanel();
        lblTituloRemarcar = new javax.swing.JLabel();
        btnBackRemarcar = new javax.swing.JButton();
        panelFuncRemarcar = new javax.swing.JScrollPane();
        listFuncRem = new javax.swing.JList();
        lblFuncRem = new javax.swing.JLabel();
        txtHoraRem = new javax.swing.JTextField();
        lbl1 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        txtClienteRem = new javax.swing.JTextField();
        lblClientRerm = new javax.swing.JLabel();
        txtDataRem = new javax.swing.JTextField();
        lblRem = new javax.swing.JLabel();
        btnVerfRem = new javax.swing.JButton();
        btnAltRem = new javax.swing.JButton();
        lblServRem = new javax.swing.JLabel();
        txtServRem = new javax.swing.JTextField();
        relatorios = new javax.swing.JPanel();
        lblRelato = new javax.swing.JLabel();
        btnClienteRelato = new javax.swing.JButton();
        btnServRelato = new javax.swing.JButton();
        btnFuncRelato = new javax.swing.JButton();
        btnClienteSitRelato = new javax.swing.JButton();
        btnAgendaRelato = new javax.swing.JButton();
        btnRelatoPorCleinte = new javax.swing.JButton();
        btnBackRelato = new javax.swing.JButton();
        panelRelato = new javax.swing.JScrollPane();
        txtAreaRelato = new javax.swing.JTextArea();
        txtVerfAgd = new javax.swing.JTextField();
        btnVerfAgd = new javax.swing.JButton();
        btnRelData = new javax.swing.JButton();
        btnRelNome = new javax.swing.JButton();
        btnRelCdg = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(350, 576));

        menuPrincipal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblMenuPrincipal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblMenuPrincipal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMenuPrincipal.setText("Menu principal");

        btnMenuServico.setText("Criar serviço");
        btnMenuServico.setToolTipText("Ir para o menu de serviços");
        btnMenuServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuServicoActionPerformed(evt);
            }
        });

        btnMenuCliente.setText("Cadastro de clientes");
        btnMenuCliente.setToolTipText("Ir para o menu de cadastro de clientes");
        btnMenuCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuClienteActionPerformed(evt);
            }
        });

        btnMenuFuncionario.setText("Cadastro dos funcionarios");
        btnMenuFuncionario.setToolTipText("Ir para o menu de cadastro de funcionarios");
        btnMenuFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuFuncionarioActionPerformed(evt);
            }
        });

        btnMenuAtendimento.setText("Atendimentos");
        btnMenuAtendimento.setToolTipText("Ir para o menu de atendmientos");
        btnMenuAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuAtendimentoActionPerformed(evt);
            }
        });

        btnMenuAgenda.setText("Agenda do dia");
        btnMenuAgenda.setToolTipText("Ir para o menu de agenda");
        btnMenuAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuAgendaActionPerformed(evt);
            }
        });

        btnMenuMarcar.setText("Marcar horarios");
        btnMenuMarcar.setToolTipText("Ir para o menu para marcar horario");
        btnMenuMarcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuMarcarActionPerformed(evt);
            }
        });

        btnMenuRemarcar.setText("Remarcar horarios");
        btnMenuRemarcar.setToolTipText("Ir para o menu para remarcar horaios");
        btnMenuRemarcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuRemarcarActionPerformed(evt);
            }
        });

        btnMenuRelatorios.setText("Relatórios");
        btnMenuRelatorios.setToolTipText("Ir para o menu para mostrar relatórios");
        btnMenuRelatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuRelatoriosActionPerformed(evt);
            }
        });

        lblVerificaBanco.setText("Desconetado");

        javax.swing.GroupLayout menuPrincipalLayout = new javax.swing.GroupLayout(menuPrincipal);
        menuPrincipal.setLayout(menuPrincipalLayout);
        menuPrincipalLayout.setHorizontalGroup(
            menuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPrincipalLayout.createSequentialGroup()
                .addGroup(menuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuPrincipalLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(lblMenuPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(lblVerificaBanco))
                    .addGroup(menuPrincipalLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(menuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnMenuServico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMenuCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMenuFuncionario, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(btnMenuAtendimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMenuAgenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMenuMarcar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMenuRemarcar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMenuRelatorios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        menuPrincipalLayout.setVerticalGroup(
            menuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMenuPrincipal)
                    .addComponent(lblVerificaBanco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenuServico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenuCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenuFuncionario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenuAtendimento, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenuAgenda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenuMarcar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenuRemarcar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMenuRelatorios)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnBackServ.setText("Voltar");
        btnBackServ.setToolTipText("Voltar ao menu principal");
        btnBackServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackServActionPerformed(evt);
            }
        });

        lblTituloServico.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTituloServico.setText("Criar serviço");
        lblTituloServico.setToolTipText("");

        txtNomeServ.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNomeServ.setToolTipText("Nome do serviço");
        txtNomeServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeServActionPerformed(evt);
            }
        });

        btnCadastroServico.setText("Cadastrar");
        btnCadastroServico.setToolTipText("Cadastra o servico com o nome e a descrição detalhadasa acima");
        btnCadastroServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroServicoActionPerformed(evt);
            }
        });

        txtDescServ.setColumns(20);
        txtDescServ.setRows(5);
        txtDescServ.setToolTipText("Descrição do serviço");
        jPanelServ.setViewportView(txtDescServ);

        lblNomeServ.setText("Nome do serviço");

        lblDescServ.setText("Descrição do serviço");

        lblErroServ.setText(" ");

        btnAltServ.setText("Alterar");
        btnAltServ.setToolTipText("quando ativado o botao cadastrar fara com que o dados sejam alterados");

        btnVerfServ.setText("Verificar");
        btnVerfServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerfServActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout servicosLayout = new javax.swing.GroupLayout(servicos);
        servicos.setLayout(servicosLayout);
        servicosLayout.setHorizontalGroup(
            servicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(servicosLayout.createSequentialGroup()
                .addGroup(servicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(servicosLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(servicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(servicosLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblNomeServ))
                            .addComponent(lblTituloServico, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(servicosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelServ, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(servicosLayout.createSequentialGroup()
                .addGroup(servicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(servicosLayout.createSequentialGroup()
                        .addGroup(servicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(servicosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(servicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBackServ)
                                    .addComponent(txtNomeServ, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(servicosLayout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(lblDescServ)))
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(servicosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(servicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(servicosLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnVerfServ)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCadastroServico)
                                .addGap(18, 18, 18)
                                .addComponent(btnAltServ))
                            .addComponent(lblErroServ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        servicosLayout.setVerticalGroup(
            servicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(servicosLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(btnBackServ)
                .addGap(8, 8, 8)
                .addComponent(lblTituloServico, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNomeServ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeServ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDescServ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelServ)
                .addGap(4, 4, 4)
                .addComponent(lblErroServ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(servicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastroServico)
                    .addComponent(btnAltServ)
                    .addComponent(btnVerfServ))
                .addContainerGap())
        );

        btnBackCadCliente.setText("Voltar");
        btnBackCadCliente.setToolTipText("Voltar ao menu principal");
        btnBackCadCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackCadClienteActionPerformed(evt);
            }
        });

        lblTituloClientes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTituloClientes.setText("Cadastro de clientes");

        btnCadastroCliente.setText("Cadastrar");
        btnCadastroCliente.setToolTipText("Cadastra o cliente com as informações descritas acima");
        btnCadastroCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroClienteActionPerformed(evt);
            }
        });

        txtNomeCadClient.setToolTipText("Nome do Cliente");
        txtNomeCadClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeCadClientActionPerformed(evt);
            }
        });

        lblCastroNomeCliente.setText("Nome");

        lblCadClienteCpf.setText("Cpf");

        txtCadClienteCpf.setToolTipText("Cpf do Ciente:sem traços");

        lblCadClienteTelefone.setText("Telefone");

        txtCadClienteTelefone.setToolTipText("Telefone do cliente: (DD)Numero");
        txtCadClienteTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCadClienteTelefoneActionPerformed(evt);
            }
        });

        lblCadClienteEmail.setText("Email");

        txtCadClienteEmail.setToolTipText("Email do  cliente");
        txtCadClienteEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCadClienteEmailActionPerformed(evt);
            }
        });

        lblCadClienteEndereco.setText("Endereço");

        txtCadClienteEndereco.setToolTipText("Endereço do cliente: Cidade/Rua/N°");
        txtCadClienteEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCadClienteEnderecoActionPerformed(evt);
            }
        });

        lblCadClienteNasc.setText("Data de Nascimento");

        txtCadClienteNasc.setToolTipText("Nascimento do cliente DD/MM/AA");

        lblCadClienteTipo.setText("Sexo");

        txtCadClienteTipo.setToolTipText("Como o cliente se difine");

        lblCadClienteEstCivil.setText("Estado civil");

        txtCadClienteEstCivil.setToolTipText("Estado civil do cliente");
        txtCadClienteEstCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCadClienteEstCivilActionPerformed(evt);
            }
        });

        BtnTglSituacao.setSelected(true);
        BtnTglSituacao.setText("Ativado");
        BtnTglSituacao.setToolTipText("Situação do cleinte");

        lblCadClienteSituacao.setText("Situaçao");

        lblCadClienteErro.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        lblCadClienteErro.setText(" ");

        btnDeleteCliente.setText("Deletar?");
        btnDeleteCliente.setToolTipText("Deleta o cliente cadastrado");
        btnDeleteCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteClienteActionPerformed(evt);
            }
        });

        lblDelCliente.setText("Deletar cliente?");

        btnConfDelCliente.setText("Sim");
        btnConfDelCliente.setToolTipText("Tem certeza de deletar o cliente?");
        btnConfDelCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfDelClienteActionPerformed(evt);
            }
        });

        btnNegDelCliente.setText("Nao");
        btnNegDelCliente.setToolTipText("Cancelar ");
        btnNegDelCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegDelClienteActionPerformed(evt);
            }
        });

        btnAltClient.setText("Alterar");
        btnAltClient.setToolTipText("quando ativado o botao cadastrar fara com que o dados sejam alterados");

        btnVerfClient.setText("Verificar");
        btnVerfClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerfClientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ClientesLayout = new javax.swing.GroupLayout(Clientes);
        Clientes.setLayout(ClientesLayout);
        ClientesLayout.setHorizontalGroup(
            ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientesLayout.createSequentialGroup()
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ClientesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCadClienteTelefone)
                            .addComponent(lblCadClienteEmail)
                            .addComponent(lblCadClienteEndereco))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCadClienteEmail)
                            .addComponent(txtCadClienteEndereco)
                            .addComponent(txtCadClienteTelefone)))
                    .addGroup(ClientesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBackCadCliente))
                    .addGroup(ClientesLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(lblTituloClientes))
                    .addGroup(ClientesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCastroNomeCliente)
                            .addComponent(lblCadClienteCpf))
                        .addGap(28, 28, 28)
                        .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNomeCadClient, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                            .addComponent(txtCadClienteCpf)))
                    .addGroup(ClientesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblCadClienteNasc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCadClienteNasc))
                    .addGroup(ClientesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCadClienteEstCivil)
                            .addComponent(lblCadClienteTipo)
                            .addComponent(lblCadClienteSituacao))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCadClienteTipo)
                            .addComponent(txtCadClienteEstCivil)
                            .addGroup(ClientesLayout.createSequentialGroup()
                                .addComponent(BtnTglSituacao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAltClient)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnVerfClient)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(ClientesLayout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(btnCadastroCliente)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCadClienteErro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ClientesLayout.createSequentialGroup()
                        .addComponent(lblDelCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeleteCliente)
                        .addGap(18, 18, 18)
                        .addComponent(btnConfDelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNegDelCliente)))
                .addGap(143, 143, 143))
        );
        ClientesLayout.setVerticalGroup(
            ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientesLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(btnBackCadCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTituloClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeCadClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCastroNomeCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCadClienteCpf)
                    .addComponent(txtCadClienteCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCadClienteTelefone)
                    .addComponent(txtCadClienteTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCadClienteEmail)
                    .addComponent(txtCadClienteEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCadClienteEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCadClienteEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCadClienteNasc)
                    .addComponent(txtCadClienteNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCadClienteTipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCadClienteTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCadClienteEstCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCadClienteEstCivil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnTglSituacao)
                    .addComponent(lblCadClienteSituacao)
                    .addComponent(btnAltClient)
                    .addComponent(btnVerfClient))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCadClienteErro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDelCliente)
                    .addComponent(btnDeleteCliente)
                    .addComponent(btnConfDelCliente)
                    .addComponent(btnNegDelCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCadastroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnBackCadFunc.setText("Voltar");
        btnBackCadFunc.setToolTipText("Voltar ao menu principal");
        btnBackCadFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackCadFuncActionPerformed(evt);
            }
        });

        lblTituloCadFunc.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTituloCadFunc.setText("Cadastro de Funcionarios");

        btnCadFunc.setText("Cadastrar");
        btnCadFunc.setToolTipText("Cadastra ou verifica os dados acima");
        btnCadFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadFuncActionPerformed(evt);
            }
        });

        txtCadFunc.setToolTipText("Nome do Funcionario");
        txtCadFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCadFuncActionPerformed(evt);
            }
        });

        lblCadFuncNome.setText("Nome");

        lblCadFuncCpf.setText("Cpf");

        txtCadFuncCpf.setToolTipText("Cpf do Funcionario:sem traços");

        lblCadFuncTel.setText("Telefone");

        txtCadFuncTel.setToolTipText("Telefone do Funcionario: (DD)Numero");
        txtCadFuncTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCadFuncTelActionPerformed(evt);
            }
        });

        lblCadFuncEmail.setText("Email");

        txtCadFuncEmail.setToolTipText("Email do  Funcionario");
        txtCadFuncEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCadFuncEmailActionPerformed(evt);
            }
        });

        lblCadFuncSituacao.setText("Deletar funcionario");

        lblCadFuncErro.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        lblCadFuncErro.setText(" ");

        btnDeleteFuncionario.setText("Deletar?");
        btnDeleteFuncionario.setToolTipText("Deleta o Funcionario cadastrado");
        btnDeleteFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteFuncionarioActionPerformed(evt);
            }
        });

        btnConfDelFunc.setText("Sim");
        btnConfDelFunc.setToolTipText("Tem certeza de deletar o funcinario?");
        btnConfDelFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfDelFuncActionPerformed(evt);
            }
        });

        btnNegDelFunc.setText("Nao");
        btnNegDelFunc.setToolTipText("Canceça  o deletamento do Funcionario");
        btnNegDelFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegDelFuncActionPerformed(evt);
            }
        });

        btnAltFunc.setText("Alterar");
        btnAltFunc.setToolTipText("quando ativado o botao cadastrar fara com que o dados sejam alterados");

        btnVerfFunc.setText("Verificar");
        btnVerfFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerfFuncActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FuncionariosLayout = new javax.swing.GroupLayout(Funcionarios);
        Funcionarios.setLayout(FuncionariosLayout);
        FuncionariosLayout.setHorizontalGroup(
            FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FuncionariosLayout.createSequentialGroup()
                .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FuncionariosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBackCadFunc))
                    .addGroup(FuncionariosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCadFuncNome)
                            .addComponent(lblCadFuncCpf))
                        .addGap(28, 28, 28)
                        .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCadFuncCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCadFunc)))
                    .addGroup(FuncionariosLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(btnCadFunc)))
                .addContainerGap())
            .addGroup(FuncionariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FuncionariosLayout.createSequentialGroup()
                        .addComponent(lblCadFuncErro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(FuncionariosLayout.createSequentialGroup()
                        .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCadFuncTel)
                            .addComponent(lblCadFuncEmail))
                        .addGap(13, 13, 13)
                        .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FuncionariosLayout.createSequentialGroup()
                                .addComponent(txtCadFuncTel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(FuncionariosLayout.createSequentialGroup()
                                .addComponent(txtCadFuncEmail)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FuncionariosLayout.createSequentialGroup()
                        .addGap(0, 27, Short.MAX_VALUE)
                        .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FuncionariosLayout.createSequentialGroup()
                                .addComponent(lblTituloCadFunc)
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FuncionariosLayout.createSequentialGroup()
                                .addComponent(btnVerfFunc)
                                .addGap(18, 18, 18)
                                .addComponent(btnAltFunc)
                                .addGap(71, 71, 71))))
                    .addGroup(FuncionariosLayout.createSequentialGroup()
                        .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FuncionariosLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(btnDeleteFuncionario)
                                .addGap(18, 18, 18)
                                .addComponent(btnConfDelFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addComponent(btnNegDelFunc))
                            .addGroup(FuncionariosLayout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(lblCadFuncSituacao)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        FuncionariosLayout.setVerticalGroup(
            FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FuncionariosLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(btnBackCadFunc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTituloCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCadFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCadFuncNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCadFuncCpf)
                    .addComponent(txtCadFuncCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCadFuncTel)
                    .addComponent(txtCadFuncTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCadFuncEmail)
                    .addComponent(txtCadFuncEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(lblCadFuncErro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAltFunc)
                    .addComponent(btnVerfFunc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCadFuncSituacao)
                .addGap(18, 18, 18)
                .addGroup(FuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteFuncionario)
                    .addComponent(btnConfDelFunc)
                    .addComponent(btnNegDelFunc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCadFunc)
                .addGap(34, 34, 34))
        );

        btnBackAtendimentos.setText("Voltar");
        btnBackAtendimentos.setToolTipText("Voltar ao menu principal");
        btnBackAtendimentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackAtendimentosActionPerformed(evt);
            }
        });

        lblTituloAtendimento.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTituloAtendimento.setText("Atendimentos");

        btnCadastroAtendimento.setText("Cadastrar");
        btnCadastroAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroAtendimentoActionPerformed(evt);
            }
        });

        lblDataAtendmiento.setText("Data");

        lblHorarioAtendmiento.setText("Horario");

        txtHorarioAtendimento.setText("HH");
        txtHorarioAtendimento.setToolTipText("Horario: 24H HH/MM");

        lblFuncionariosAtendmiento.setText("Funcionarios:");

        listFuncDispo.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jpanelListaFuncAtendmiento.setViewportView(listFuncDispo);

        lblNomeClienteAtendmiento.setText("Clientes:");

        lblStatusAtendmiento.setText("Status");

        listStatusAtendmiento.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Agendado", "Cancelado", "Realizado" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        panelStatusAtendimento.setViewportView(listStatusAtendmiento);

        lblDescAtendmiento.setText("Descrição");

        txtDescAtendmiento.setColumns(20);
        txtDescAtendmiento.setLineWrap(true);
        txtDescAtendmiento.setRows(5);
        txtDescAtendmiento.setToolTipText("Descrição do atendimento");
        panelTxtAtendmiento.setViewportView(txtDescAtendmiento);

        listClienteDispo.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });

        btnAltAtend.setText("Alterar");
        btnAltAtend.setToolTipText("quando ativado o botao cadastrar fara com que o dados sejam alterados");

        btnVerfAtend.setText("Verificar");
        btnVerfAtend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerfAtendActionPerformed(evt);
            }
        });

        lblAtend.setText(" ");

        lblServAtend.setText("Servicos");

        txtDataAtendimento.setText("DD/MM/AA");
        txtDataAtendimento.setToolTipText("DD/MM/AA");
        txtDataAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataAtendimentoActionPerformed(evt);
            }
        });

        listServAtend.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });

        javax.swing.GroupLayout AtendimentosLayout = new javax.swing.GroupLayout(Atendimentos);
        Atendimentos.setLayout(AtendimentosLayout);
        AtendimentosLayout.setHorizontalGroup(
            AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AtendimentosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AtendimentosLayout.createSequentialGroup()
                        .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(AtendimentosLayout.createSequentialGroup()
                                .addComponent(lblFuncionariosAtendmiento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jpanelListaFuncAtendmiento))
                            .addGroup(AtendimentosLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(btnCadastroAtendimento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAltAtend)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnVerfAtend)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(AtendimentosLayout.createSequentialGroup()
                                .addComponent(lblNomeClienteAtendmiento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(listClienteDispo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(AtendimentosLayout.createSequentialGroup()
                                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblDescAtendmiento)
                                    .addComponent(lblStatusAtendmiento, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(panelStatusAtendimento)
                                    .addComponent(panelTxtAtendmiento, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                            .addComponent(lblAtend, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AtendimentosLayout.createSequentialGroup()
                                .addComponent(lblServAtend)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(listServAtend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(27, 27, 27))
                    .addGroup(AtendimentosLayout.createSequentialGroup()
                        .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AtendimentosLayout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(lblTituloAtendimento))
                            .addComponent(btnBackAtendimentos)
                            .addGroup(AtendimentosLayout.createSequentialGroup()
                                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDataAtendmiento)
                                    .addComponent(lblHorarioAtendmiento))
                                .addGap(18, 18, 18)
                                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHorarioAtendimento)
                                    .addComponent(txtDataAtendimento, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        AtendimentosLayout.setVerticalGroup(
            AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AtendimentosLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(btnBackAtendimentos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTituloAtendimento, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataAtendmiento)
                    .addComponent(txtDataAtendimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHorarioAtendmiento)
                    .addComponent(txtHorarioAtendimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFuncionariosAtendmiento)
                    .addComponent(jpanelListaFuncAtendmiento, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeClienteAtendmiento)
                    .addComponent(listClienteDispo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelStatusAtendimento, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStatusAtendmiento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTxtAtendmiento, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescAtendmiento))
                .addGap(2, 2, 2)
                .addComponent(lblAtend, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblServAtend)
                    .addComponent(listServAtend, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(AtendimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastroAtendimento)
                    .addComponent(btnAltAtend)
                    .addComponent(btnVerfAtend))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblTituloAgenda.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTituloAgenda.setText("Agenda do dia");

        btnBackAgenda.setText("Voltar");
        btnBackAgenda.setToolTipText("Voltar ao menu principal");
        btnBackAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackAgendaActionPerformed(evt);
            }
        });

        lblDataAgenda.setText("Data");

        btnVerfAgenda.setText("Verificar agenda");
        btnVerfAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerfAgendaActionPerformed(evt);
            }
        });

        txtAgenDia.setColumns(20);
        txtAgenDia.setRows(5);
        jScrollPane1.setViewportView(txtAgenDia);

        txtDataAgenda.setText("DD/MM/AA");
        txtDataAgenda.setToolTipText("DD/MM/AA");

        javax.swing.GroupLayout AgendaLayout = new javax.swing.GroupLayout(Agenda);
        Agenda.setLayout(AgendaLayout);
        AgendaLayout.setHorizontalGroup(
            AgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AgendaLayout.createSequentialGroup()
                        .addComponent(lblDataAgenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDataAgenda))
                    .addGroup(AgendaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(AgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AgendaLayout.createSequentialGroup()
                                .addGroup(AgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AgendaLayout.createSequentialGroup()
                                        .addComponent(btnBackAgenda)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblTituloAgenda))
                                    .addGroup(AgendaLayout.createSequentialGroup()
                                        .addGap(87, 87, 87)
                                        .addComponent(btnVerfAgenda)))
                                .addGap(55, 55, 55)))))
                .addContainerGap())
        );
        AgendaLayout.setVerticalGroup(
            AgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AgendaLayout.createSequentialGroup()
                        .addComponent(btnBackAgenda)
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgendaLayout.createSequentialGroup()
                        .addComponent(lblTituloAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(AgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataAgenda)
                    .addComponent(txtDataAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVerfAgenda)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        lblTituloMarcar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTituloMarcar.setText("Marcar Horario");

        btnBackMarcar.setText("Voltar");
        btnBackMarcar.setToolTipText("Voltar ao menu principal");
        btnBackMarcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackMarcarActionPerformed(evt);
            }
        });

        lblDataMarcar.setText("Data");

        panelMarcar.setBorder(null);

        listMarcFunc.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        panelMarcar.setViewportView(listMarcFunc);

        txtHorarioMarcar.setText("HH");
        txtHorarioMarcar.setToolTipText("Data: 15/15/15");
        txtHorarioMarcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHorarioMarcarActionPerformed(evt);
            }
        });

        lblHorarioMarcar.setText("Horario");

        btnVerfMarcar.setText("Verificar");
        btnVerfMarcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerfMarcarActionPerformed(evt);
            }
        });

        lblFuncMarcar.setText("Funcionarios disponiveis");

        BtnCadMarcar.setText("Cadastrar");
        BtnCadMarcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCadMarcarActionPerformed(evt);
            }
        });

        listMarcCliente.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });

        lblClientHor.setText("Clientes Disponiveis");

        btnAltHor.setText("Alterar");
        btnAltHor.setToolTipText("quando ativado o botao cadastrar fara com que o dados sejam alterados");
        btnAltHor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                btnAltHorStateChanged(evt);
            }
        });
        btnAltHor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltHorActionPerformed(evt);
            }
        });

        btnVerfHoraDisp.setText("Verificar Horario Disponivel");
        btnVerfHoraDisp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerfHoraDispActionPerformed(evt);
            }
        });

        lblMarcServ.setText("Servicos");

        listMarcServ.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });

        txtDataMarcar.setText("DD/MM/AA");
        txtDataMarcar.setToolTipText("DD/MM/AA");

        javax.swing.GroupLayout marcarhorarioLayout = new javax.swing.GroupLayout(marcarhorario);
        marcarhorario.setLayout(marcarhorarioLayout);
        marcarhorarioLayout.setHorizontalGroup(
            marcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(marcarhorarioLayout.createSequentialGroup()
                .addGroup(marcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(marcarhorarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(marcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMarc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(marcarhorarioLayout.createSequentialGroup()
                                .addGroup(marcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(marcarhorarioLayout.createSequentialGroup()
                                        .addComponent(BtnCadMarcar)
                                        .addGap(27, 27, 27)
                                        .addComponent(btnAltHor)
                                        .addGap(28, 28, 28)
                                        .addComponent(btnVerfMarcar))
                                    .addGroup(marcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(listMarcServ, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                        .addComponent(listMarcCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, marcarhorarioLayout.createSequentialGroup()
                                            .addGap(57, 57, 57)
                                            .addComponent(lblFuncMarcar))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, marcarhorarioLayout.createSequentialGroup()
                                            .addGap(73, 73, 73)
                                            .addComponent(lblClientHor))
                                        .addComponent(panelMarcar, javax.swing.GroupLayout.Alignment.LEADING)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(marcarhorarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(marcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBackMarcar)
                            .addGroup(marcarhorarioLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(lblTituloMarcar))
                            .addGroup(marcarhorarioLayout.createSequentialGroup()
                                .addGroup(marcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDataMarcar)
                                    .addComponent(lblHorarioMarcar))
                                .addGap(18, 18, 18)
                                .addGroup(marcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHorarioMarcar)
                                    .addComponent(txtDataMarcar, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)))))
                    .addGroup(marcarhorarioLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnVerfHoraDisp))
                    .addGroup(marcarhorarioLayout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(lblMarcServ)))
                .addContainerGap())
        );
        marcarhorarioLayout.setVerticalGroup(
            marcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(marcarhorarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBackMarcar)
                .addGap(1, 1, 1)
                .addComponent(lblTituloMarcar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(marcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataMarcar)
                    .addComponent(txtDataMarcar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(marcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHorarioMarcar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHorarioMarcar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVerfHoraDisp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFuncMarcar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelMarcar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblClientHor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listMarcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMarcServ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listMarcServ, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblMarc, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(marcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAltHor)
                    .addComponent(BtnCadMarcar)
                    .addComponent(btnVerfMarcar))
                .addGap(19, 19, 19))
        );

        lblTituloRemarcar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTituloRemarcar.setText("Remarcar horario");

        btnBackRemarcar.setText("Voltar");
        btnBackRemarcar.setToolTipText("Voltar ao menu principal");
        btnBackRemarcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackRemarcarActionPerformed(evt);
            }
        });

        listFuncRem.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        panelFuncRemarcar.setViewportView(listFuncRem);

        lblFuncRem.setText("Funcionarios disponiveis");

        txtHoraRem.setText("HH");

        lbl1.setText("Data");

        lbl2.setText("Horario");

        txtClienteRem.setEditable(false);
        txtClienteRem.setText(" ");

        lblClientRerm.setText("Cliente");

        txtDataRem.setText("DDMMAA");
        txtDataRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataRemActionPerformed(evt);
            }
        });

        lblRem.setText(" ");

        btnVerfRem.setText("Verificar");
        btnVerfRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerfRemActionPerformed(evt);
            }
        });

        btnAltRem.setText("Alterar");
        btnAltRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltRemActionPerformed(evt);
            }
        });

        lblServRem.setText("Servico");

        txtServRem.setEditable(false);
        txtServRem.setText(" ");

        javax.swing.GroupLayout remarcarhorarioLayout = new javax.swing.GroupLayout(remarcarhorario);
        remarcarhorario.setLayout(remarcarhorarioLayout);
        remarcarhorarioLayout.setHorizontalGroup(
            remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remarcarhorarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(remarcarhorarioLayout.createSequentialGroup()
                        .addGroup(remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(remarcarhorarioLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHoraRem)
                                    .addComponent(txtDataRem, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)))
                            .addGroup(remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(remarcarhorarioLayout.createSequentialGroup()
                                    .addComponent(lblClientRerm)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtClienteRem, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(remarcarhorarioLayout.createSequentialGroup()
                                        .addGap(80, 80, 80)
                                        .addComponent(lblFuncRem))
                                    .addComponent(panelFuncRemarcar, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(remarcarhorarioLayout.createSequentialGroup()
                                    .addComponent(lblServRem)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtServRem, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(remarcarhorarioLayout.createSequentialGroup()
                                    .addComponent(btnVerfRem)
                                    .addGap(103, 103, 103))))
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addComponent(lblRem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(remarcarhorarioLayout.createSequentialGroup()
                        .addGroup(remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBackRemarcar)
                            .addGroup(remarcarhorarioLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(lblTituloRemarcar))
                            .addGroup(remarcarhorarioLayout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(btnAltRem)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        remarcarhorarioLayout.setVerticalGroup(
            remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remarcarhorarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBackRemarcar)
                .addGap(1, 1, 1)
                .addComponent(lblTituloRemarcar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl1)
                    .addComponent(txtDataRem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHoraRem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFuncRem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelFuncRemarcar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(btnVerfRem)
                .addGap(18, 18, 18)
                .addGroup(remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtClienteRem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblClientRerm))
                .addGap(12, 12, 12)
                .addGroup(remarcarhorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblServRem)
                    .addComponent(txtServRem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAltRem)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        relatorios.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblRelato.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblRelato.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRelato.setText("Relatorios");

        btnClienteRelato.setText("Clientes");
        btnClienteRelato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClienteRelatoActionPerformed(evt);
            }
        });

        btnServRelato.setText("Serviços");
        btnServRelato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServRelatoActionPerformed(evt);
            }
        });

        btnFuncRelato.setText("Funcionarios");
        btnFuncRelato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFuncRelatoActionPerformed(evt);
            }
        });

        btnClienteSitRelato.setText("Cliente por situação");
        btnClienteSitRelato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClienteSitRelatoActionPerformed(evt);
            }
        });

        btnAgendaRelato.setText("Agenda");
        btnAgendaRelato.setToolTipText("");
        btnAgendaRelato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgendaRelatoActionPerformed(evt);
            }
        });

        btnRelatoPorCleinte.setText("Relatorio de cada cliente");
        btnRelatoPorCleinte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatoPorCleinteActionPerformed(evt);
            }
        });

        btnBackRelato.setText("Voltar");
        btnBackRelato.setToolTipText("Voltar ao menu principal");
        btnBackRelato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackRelatoActionPerformed(evt);
            }
        });

        panelRelato.setBorder(null);

        txtAreaRelato.setEditable(false);
        txtAreaRelato.setColumns(20);
        txtAreaRelato.setRows(5);
        panelRelato.setViewportView(txtAreaRelato);

        txtVerfAgd.setText("DDMMAA");

        btnVerfAgd.setText("Verificar");
        btnVerfAgd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerfAgdActionPerformed(evt);
            }
        });

        btnRelData.setText("Data");
        btnRelData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelDataActionPerformed(evt);
            }
        });

        btnRelNome.setText("Nome");
        btnRelNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelNomeActionPerformed(evt);
            }
        });

        btnRelCdg.setText("Cdg");
        btnRelCdg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelCdgActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout relatoriosLayout = new javax.swing.GroupLayout(relatorios);
        relatorios.setLayout(relatoriosLayout);
        relatoriosLayout.setHorizontalGroup(
            relatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(relatoriosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(relatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAgendaRelato, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBackRelato)
                    .addComponent(lblRelato, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, relatoriosLayout.createSequentialGroup()
                        .addComponent(txtVerfAgd, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnVerfAgd, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelRelato)
                    .addComponent(btnRelatoPorCleinte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClienteSitRelato, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFuncRelato, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClienteRelato, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnServRelato, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(relatoriosLayout.createSequentialGroup()
                        .addComponent(btnRelData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRelNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRelCdg, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        relatoriosLayout.setVerticalGroup(
            relatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(relatoriosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBackRelato)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRelato)
                .addGap(5, 5, 5)
                .addComponent(btnServRelato)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClienteRelato)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFuncRelato)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClienteSitRelato)
                .addGap(4, 4, 4)
                .addComponent(btnAgendaRelato)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(relatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVerfAgd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerfAgd, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRelatoPorCleinte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(relatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRelData)
                    .addComponent(btnRelNome)
                    .addComponent(btnRelCdg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(panelRelato, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(servicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Clientes, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Atendimentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Agenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(marcarhorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(remarcarhorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(relatorios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Clientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(menuPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(servicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Atendimentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Agenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(relatorios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(remarcarhorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(marcarhorario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMenuAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuAtendimentoActionPerformed
        // TODO add your handling code here:
        menuPrincipal.setVisible(false);
        Atendimentos.setVisible(true);
        ArrayList<Cliente> ClienteArray = new ArrayList<Cliente>();
        Cliente FuncCliente = new Cliente();
        ClienteArray=FuncCliente.ler();
        ArrayList<Funcionario> FuncArray = new ArrayList<Funcionario>();
        Funcionario FuncFunc = new Funcionario();
        FuncArray=FuncFunc.ler();
        ArrayList<servico> servArray = new ArrayList<servico>();
        servico servFunc = new servico();
        servArray=servFunc.ler();
        String [] TempCliente=new String[ClienteArray.size()];
        String [] TempFunc=new String[FuncArray.size()];
        String [] TempServ=new String[servArray.size()];
        for (int i = 0; i < ClienteArray.size(); ++i) {
            Cliente obj = (Cliente) ClienteArray.get(i);
            TempCliente[i]="Nome: "+obj.nome+" Cpf: "+obj.cpf;
        }
        for (int i = 0; i < FuncArray.size(); ++i) {
            Funcionario obj = (Funcionario) FuncArray.get(i);
            TempFunc[i]="Nome: "+obj.nome+" Cpf: "+obj.cpf;
        }
        for (int i = 0; i < servArray.size(); ++i) {
            servico obj = (servico) servArray.get(i);
            TempServ[i]=obj.Nome;
        }
        listFuncDispo.setListData(TempFunc);
        listClienteDispo.setListData(TempCliente);
        listServAtend.setListData(TempServ);
    }//GEN-LAST:event_btnMenuAtendimentoActionPerformed

    private void btnMenuAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuAgendaActionPerformed
        // TODO add your handling code here:
        menuPrincipal.setVisible(false);
        Agenda.setVisible(true);
    }//GEN-LAST:event_btnMenuAgendaActionPerformed

    private void btnMenuServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuServicoActionPerformed
        // TODO add your handling code here:
        menuPrincipal.setVisible(false);
        servicos.setVisible(true);
        btnCadastroServico.setVisible(false);
        btnAltServ.setVisible(false);
    }//GEN-LAST:event_btnMenuServicoActionPerformed

    private void btnBackServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackServActionPerformed
        // TODO add your handling code here:
        servicos.setVisible(false);
        menuPrincipal.setVisible(true);
    }//GEN-LAST:event_btnBackServActionPerformed

    private void txtNomeServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeServActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeServActionPerformed

    private void btnBackCadClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackCadClienteActionPerformed
        // TODO add your handling code here:
        Clientes.setVisible(false);
        menuPrincipal.setVisible(true);
    }//GEN-LAST:event_btnBackCadClienteActionPerformed

    private void txtNomeCadClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeCadClientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeCadClientActionPerformed

    private void txtCadClienteTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCadClienteTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCadClienteTelefoneActionPerformed

    private void txtCadClienteEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCadClienteEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCadClienteEmailActionPerformed

    private void txtCadClienteEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCadClienteEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCadClienteEnderecoActionPerformed

    private void txtCadClienteEstCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCadClienteEstCivilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCadClienteEstCivilActionPerformed

    private void btnBackCadFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackCadFuncActionPerformed
        // TODO add your handling code here:
        Funcionarios.setVisible(false);
        menuPrincipal.setVisible(true);
    }//GEN-LAST:event_btnBackCadFuncActionPerformed

    private void txtCadFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCadFuncActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCadFuncActionPerformed

    private void txtCadFuncTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCadFuncTelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCadFuncTelActionPerformed

    private void txtCadFuncEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCadFuncEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCadFuncEmailActionPerformed

    private void btnDeleteFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteFuncionarioActionPerformed
        btnDeleteFuncionario.setVisible(false);
        btnConfDelFunc.setVisible(true);
        btnNegDelFunc.setVisible(true);
    }//GEN-LAST:event_btnDeleteFuncionarioActionPerformed

    private void btnBackAtendimentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackAtendimentosActionPerformed
        // TODO add your handling code here:
        Atendimentos.setVisible(false);
        menuPrincipal.setVisible(true);
    }//GEN-LAST:event_btnBackAtendimentosActionPerformed

    private void btnBackAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackAgendaActionPerformed
        // TODO add your handling code here:
        Agenda.setVisible(false);
        menuPrincipal.setVisible(true);
    }//GEN-LAST:event_btnBackAgendaActionPerformed

    private void btnBackMarcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackMarcarActionPerformed
        // TODO add your handling code here:
        marcarhorario.setVisible(false);
        menuPrincipal.setVisible(true);
    }//GEN-LAST:event_btnBackMarcarActionPerformed

    private void txtHorarioMarcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHorarioMarcarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHorarioMarcarActionPerformed

    private void btnBackRemarcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackRemarcarActionPerformed
        // TODO add your handling code here:
        remarcarhorario.setVisible(false);
        menuPrincipal.setVisible(true);
    }//GEN-LAST:event_btnBackRemarcarActionPerformed

    private void btnClienteRelatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClienteRelatoActionPerformed
        // TODO add your handling code here:
        String temp="";
        ArrayList<Cliente> serv = new ArrayList<Cliente>();
        Cliente servFunc = new Cliente();
        serv=servFunc.ler();

        for (int i = 0; i < serv.size(); ++i) {
        Cliente obj = (Cliente) serv.get(i);
            temp+="**********************************************\n Nome: "+obj.nome+"\n cpf: "+obj.cpf+"\n Tel: "+obj.telefone+"\n Email: "+obj.email+"\n Endereço: "+obj.endereco+"\n Nascimento: "+obj.nasc
            +"\n sexo: "+obj.sexo+"\n Estado civil: "+obj.civil+"\n Ativado: ";
            if (obj.ativado){
                temp+="Ativado";
            }else{
                temp+="Desativado";
            }
            temp+="\n **********************************\n";
        }
        
        txtAreaRelato.setText(temp);
    }//GEN-LAST:event_btnClienteRelatoActionPerformed

    private void btnClienteSitRelatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClienteSitRelatoActionPerformed
        // TODO add your handling code here:
        String temp="";
        ArrayList<Cliente> serv = new ArrayList<Cliente>();
        Cliente servFunc = new Cliente();
        serv=servFunc.ler();

        for (int i = 0; i < serv.size(); ++i) {
        Cliente obj = (Cliente) serv.get(i);
            if(obj.ativado==true){
                temp+="**********************************************\n Nome: "+obj.nome+"\n cpf: "+obj.cpf+"\n Tel: "+obj.telefone+"\n Email: "+obj.email+"\n Endereço: "+obj.endereco+"\n Nascimento: "+obj.nasc
                +"\n sexo: "+obj.sexo+"\n Estado civil: "+obj.civil+"\n Ativado: ";
                if (obj.ativado){
                    temp+="Ativado";
                }else{
                    temp+="Desativado";
                }
                temp+="\n **********************************\n";
            }
        }
        for (int i = 0; i < serv.size(); ++i) {
        Cliente obj = (Cliente) serv.get(i);
            if(obj.ativado==false){
                temp+="**********************************************\n Nome: "+obj.nome+"\n cpf: "+obj.cpf+"\n Tel: "+obj.telefone+"\n Email: "+obj.email+"\n Endereço: "+obj.endereco+"\n Nascimento: "+obj.nasc
                +"\n sexo: "+obj.sexo+"\n Estado civil: "+obj.civil+"\n Ativado: ";
                if (obj.ativado){
                    temp+="Ativado";
                }else{
                    temp+="Desativado";
                }
                temp+="\n **********************************\n";
            }
        }
        
        txtAreaRelato.setText(temp);
    }//GEN-LAST:event_btnClienteSitRelatoActionPerformed

    private void btnAgendaRelatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgendaRelatoActionPerformed
        // TODO add your handling code here:
        txtVerfAgd.setVisible(true);
        btnVerfAgd.setVisible(true);
    }//GEN-LAST:event_btnAgendaRelatoActionPerformed

    private void btnBackRelatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackRelatoActionPerformed
        // TODO add your handling code here:
        relatorios.setVisible(false);
        menuPrincipal.setVisible(true);
    }//GEN-LAST:event_btnBackRelatoActionPerformed

    private void btnFuncRelatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFuncRelatoActionPerformed
        // TODO add your handling code here:
        String temp="";
        ArrayList<Funcionario> serv = new ArrayList<Funcionario>();
        Funcionario servFunc = new Funcionario();
        serv=servFunc.ler();
        for (int i = 0; i < serv.size(); ++i) {
        Funcionario obj = (Funcionario) serv.get(i);
            temp+="\n**********************************************\n Nome: "+obj.nome+"\n cpf: "+obj.cpf+"\n Tel: "+obj.telefone+"\n Email: "+obj.email;
        }
        
        txtAreaRelato.setText(temp);
    }//GEN-LAST:event_btnFuncRelatoActionPerformed

    private void btnDeleteClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteClienteActionPerformed
        // TODO add your handling code here:
        btnDeleteCliente.setVisible(false);
        btnConfDelCliente.setVisible(true);
        btnNegDelCliente.setVisible(true);
    }//GEN-LAST:event_btnDeleteClienteActionPerformed

    private void btnMenuClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuClienteActionPerformed
        // TODO add your handling code here:
        menuPrincipal.setVisible(false);
        Clientes.setVisible(true);
        btnDeleteCliente.setVisible(false);
        btnAltClient.setVisible(false);
        btnDeleteCliente.setVisible(false);
        lblDelCliente.setVisible(false);
        btnConfDelCliente.setVisible(false);
        btnNegDelCliente.setVisible(false);
        btnCadastroCliente.setVisible(false);
    }//GEN-LAST:event_btnMenuClienteActionPerformed

    private void btnMenuFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuFuncionarioActionPerformed
        // TODO add your handling code here:
        menuPrincipal.setVisible(false);
        Funcionarios.setVisible(true);
        btnDeleteFuncionario.setVisible(false);
        btnConfDelFunc.setVisible(false);
        btnNegDelFunc.setVisible(false);
        btnCadFunc.setVisible(false);
        btnAltFunc.setVisible(false);
        lblCadFuncSituacao.setVisible(false);
        ArrayList<Funcionario> Cvec = new ArrayList<Funcionario>();
        Funcionario c1 = new Funcionario();
        Cvec=c1.ler();
        if (Cvec.size() == 0){
            btnCadFunc.setVisible(true);
            btnVerfFunc.setVisible(false);
        } else{
            btnCadFunc.setVisible(false);
            btnVerfFunc.setVisible(true); 
        }
    }//GEN-LAST:event_btnMenuFuncionarioActionPerformed

    private void btnMenuMarcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuMarcarActionPerformed
        // TODO add your handling code here:
        menuPrincipal.setVisible(false);
        marcarhorario.setVisible(true);
        btnVerfMarcar.setVisible(false);
        ArrayList<Cliente> ClienteArray = new ArrayList<Cliente>();
        Cliente FuncCliente = new Cliente();
        ClienteArray=FuncCliente.ler();
        ArrayList<Funcionario> FuncArray = new ArrayList<Funcionario>();
        Funcionario FuncFunc = new Funcionario();
        FuncArray=FuncFunc.ler();
        ArrayList<servico> ServArray = new ArrayList<servico>();
        servico servFunc = new servico();
        ServArray=servFunc.ler();
        String [] TempCliente=new String[ClienteArray.size()];
        String [] TempFunc=new String[FuncArray.size()];
        for (int i = 0; i < ClienteArray.size(); ++i) {
            Cliente obj = (Cliente) ClienteArray.get(i);
            TempCliente[i]="Nome: "+obj.nome+" Cpf: "+obj.cpf;
        }
        for (int i = 0; i < FuncArray.size(); ++i) {
            Funcionario obj = (Funcionario) FuncArray.get(i);
            TempFunc[i]="Nome: "+obj.nome+" Cpf: "+obj.cpf;
        }
        String [] TempServ=new String[ServArray.size()];
        for (int i = 0; i < ServArray.size(); ++i) {
            servico obj = (servico) ServArray.get(i);
            TempServ[i]="Nome: "+obj.Nome+" Descrição: "+obj.Desc;
        }
        listMarcFunc.setListData(TempFunc);
        listMarcCliente.setListData(TempCliente);
        listMarcServ.setListData(TempServ);
    }//GEN-LAST:event_btnMenuMarcarActionPerformed

    private void btnMenuRemarcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuRemarcarActionPerformed
        // TODO add your handling code here:
        menuPrincipal.setVisible(false);
        remarcarhorario.setVisible(true);
        btnAltRem.setVisible(false);        
        ArrayList<Funcionario> FuncArray = new ArrayList<Funcionario>();
        Funcionario FuncFunc = new Funcionario();
        FuncArray=FuncFunc.ler();
        String [] TempFunc=new String[FuncArray.size()];
        for (int i = 0; i < FuncArray.size(); ++i) {
            Funcionario obj = (Funcionario) FuncArray.get(i);
            TempFunc[i]="Nome: "+obj.nome+" Cpf: "+obj.cpf;
        }
        listFuncRem.setListData(TempFunc);
        
    }//GEN-LAST:event_btnMenuRemarcarActionPerformed

    private void btnMenuRelatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuRelatoriosActionPerformed
        // TODO add your handling code here:
        menuPrincipal.setVisible(false);
        relatorios.setVisible(true);
        txtVerfAgd.setVisible(false);
        btnVerfAgd.setVisible(false);
        btnRelData.setVisible(false);
        btnRelNome.setVisible(false);
        btnRelCdg.setVisible(false);
    }//GEN-LAST:event_btnMenuRelatoriosActionPerformed

    private void btnVerfServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerfServActionPerformed
        // TODO add your handling code here:
        btnCadastroServico.setVisible(true);
        btnAltServ.setVisible(true);
        ArrayList<servico> serv = new ArrayList<servico>();
        servico servFunc = new servico();
        String nome = txtNomeServ.getText();
        String desc = txtDescServ.getText();
        serv=servFunc.ler();
        int t=0;
        for (servico obj :  serv) {
            if (obj.Nome.equals(nome)){
                t++;
                lblErroServ.setText("Cadastro encontrado");
                txtNomeServ.setText(obj.Nome);
                txtDescServ.setText(obj.Desc);
            }
        }
        if (t==0){
            lblErroServ.setText("Cadastro Não encontrado");
        }
    }//GEN-LAST:event_btnVerfServActionPerformed

    private void btnCadastroServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroServicoActionPerformed
        // TODO add your handling code here:
        ArrayList<servico> serv = new ArrayList<servico>();
        servico servFunc = new servico();
        String nome = txtNomeServ.getText();
        String desc = txtDescServ.getText();
        serv=servFunc.ler();
        
        if (btnAltServ.isSelected()){
            for (servico obj :  serv) {
                if (obj.Nome.equals(nome)){
                    obj.Nome=nome;
                    obj.Desc=desc;
                    servFunc.gravar(serv);
                    txtNomeServ.setText("|");
                    txtDescServ.setText("|");
                    lblErroServ.setText("Alterado com sucesso");
                }
            }
        } else {
            int t=0;
            if (serv.size()==0){
                    if (t==0){
                    serv.add(new servico(nome,desc));
                    servFunc.gravar(serv);
                    txtNomeServ.setText("|");
                    txtDescServ.setText("|");
                    lblErroServ.setText("Cadastrado com sucesso");
                }
            }else{
                for (servico obj :  serv) {
                    if (obj.Nome.equals(nome)){
                        t++;
                        lblErroServ.setText("Servico  ja cadastrado.por favor altere-o.");
                    } else{
                        if (t==0){
                        serv.add(new servico(nome,desc));
                        servFunc.gravar(serv);
                        txtNomeServ.setText("|");
                        txtDescServ.setText("|");
                        lblErroServ.setText("Cadastrado com sucesso");
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnCadastroServicoActionPerformed

    private void btnServRelatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServRelatoActionPerformed
        // TODO add your handling code here:
        String temp="";
        ArrayList<servico> serv = new ArrayList<servico>();
        servico servFunc = new servico();
        String nome = txtNomeServ.getText();
        String desc = txtDescServ.getText();
        serv=servFunc.ler();
        for (servico obj :  serv) {
            temp+="\n **********************************\nNome: "+obj.Nome+"\n Desc: "+obj.Desc+"\n";
        }
        txtAreaRelato.setText(temp);
    }//GEN-LAST:event_btnServRelatoActionPerformed

    private void btnVerfClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerfClientActionPerformed
        // TODO add your handling code here:
        btnCadastroCliente.setVisible(true);
        ArrayList<Cliente> Cvec = new ArrayList<Cliente>();
        Cliente c1 = new Cliente();
        String nome = txtNomeCadClient.getText();
        String cpf = txtCadClienteCpf.getText();
        String tel = txtCadClienteTelefone.getText();
        String email = txtCadClienteEmail.getText();
        String ender = txtCadClienteEndereco.getText();
        String Nasc = txtCadClienteNasc.getText();
        String sex = txtCadClienteTipo.getText();
        String civil = txtCadClienteEstCivil.getText();
        Boolean ativado = BtnTglSituacao.isSelected();
        Cvec=c1.ler();
        
        int t=0;
        if (Cvec.size() > 0){
            for (Cliente obj :  Cvec) {
                if (obj.cpf.equals(cpf)){
                    t++;
                    lblCadClienteErro.setText("Cadastro encontrado");
                    btnAltClient.setVisible(true);
                    btnDeleteCliente.setVisible(true);
                    lblDelCliente.setVisible(true);
                    txtNomeCadClient.setText(obj.nome);
                    txtCadClienteCpf.setText(obj.cpf);
                    txtCadClienteTelefone.setText(obj.telefone);
                    txtCadClienteEmail.setText(obj.email);
                    txtCadClienteEndereco.setText(obj.endereco);
                    txtCadClienteNasc.setText(obj.nasc);
                    txtCadClienteTipo.setText(obj.sexo);
                    txtCadClienteEstCivil.setText(obj.civil);
                    BtnTglSituacao.setSelected(obj.ativado);
                }
            }
        }
        if (t==0){
            lblCadClienteErro.setText("Cadastro Não encontrado");
        }
    }//GEN-LAST:event_btnVerfClientActionPerformed

    private void btnNegDelClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegDelClienteActionPerformed
        // TODO add your handling code here:
        btnConfDelCliente.setVisible(false);
        btnNegDelCliente.setVisible(false);
        btnDeleteCliente.setVisible(true);
    }//GEN-LAST:event_btnNegDelClienteActionPerformed

    private void btnCadastroClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroClienteActionPerformed
        // TODO add your handling code here:
        ArrayList<Cliente> ClienteArray = new ArrayList<Cliente>();
        Cliente servFunc = new Cliente();
        String nome = txtNomeCadClient.getText();
        String cpf = txtCadClienteCpf.getText();
        String tel = txtCadClienteTelefone.getText();
        String email = txtCadClienteEmail.getText();
        String ender = txtCadClienteEndereco.getText();
        String nasc = txtCadClienteNasc.getText();
        String sex = txtCadClienteTipo.getText();
        String civil = txtCadClienteEstCivil.getText();
        Boolean ativado = BtnTglSituacao.isSelected();
        ClienteArray=servFunc.ler();
        
        if (btnAltClient.isSelected()){
            for (Cliente obj :  ClienteArray) {
                if (obj.cpf.equals(cpf)){
                    obj.nome=nome;
                    obj.cpf=cpf;
                    obj.telefone=tel;
                    obj.email=email;
                    obj.endereco=ender;
                    obj.nasc=nasc;
                    obj.sexo=sex;
                    obj.civil=civil;
                    obj.ativado=ativado;
                    servFunc.gravar(ClienteArray);
                    txtNomeCadClient.setText("|");
                    txtCadClienteCpf.setText("|");
                    txtCadClienteTelefone.setText("|");
                    txtCadClienteEmail.setText("|");
                    txtCadClienteEndereco.setText("|");
                    txtCadClienteNasc.setText("|");
                    txtCadClienteTipo.setText("|");
                    txtCadClienteEstCivil.setText("|");
                    BtnTglSituacao.setSelected(false);
                    lblCadClienteErro.setText("Alterado com sucesso");
                }
            }
        } else {
            int t=0;
            if (ClienteArray.size()==0){
                    if (t==0){
                    ClienteArray.add(new Cliente(nome,cpf,sex,email,tel,nasc,ender,civil,ativado));
                    servFunc.gravar(ClienteArray);
                    txtNomeCadClient.setText("|");
                    txtCadClienteCpf.setText("|");
                    txtCadClienteTelefone.setText("|");
                    txtCadClienteEmail.setText("|");
                    txtCadClienteEndereco.setText("|");
                    txtCadClienteNasc.setText("|");
                    txtCadClienteTipo.setText("|");
                    txtCadClienteEstCivil.setText("|");
                    BtnTglSituacao.setSelected(false);
                    lblCadClienteErro.setText("Cadastrado com sucesso");
                }
            }else{
                for (Cliente obj :  ClienteArray) {
                    if (obj.cpf.equals(cpf)){
                        t++;
                        lblCadClienteErro.setText("Cliente ja cadastrado.por favor altere-o.");
                    } else{
                        if (t==0){
                        ClienteArray.add(new Cliente(nome,cpf,sex,email,tel,nasc,ender,civil,ativado));
                        servFunc.gravar(ClienteArray);
                        txtNomeCadClient.setText("|");
                        txtCadClienteCpf.setText("|");
                        txtCadClienteTelefone.setText("|");
                        txtCadClienteEmail.setText("|");
                        txtCadClienteEndereco.setText("|");
                        txtCadClienteNasc.setText("|");
                        txtCadClienteTipo.setText("|");
                        txtCadClienteEstCivil.setText("|");
                        BtnTglSituacao.setSelected(false);
                        lblCadClienteErro.setText("Cadastrado com sucesso");
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnCadastroClienteActionPerformed

    private void btnConfDelClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfDelClienteActionPerformed
        // TODO add your handling code here:
        ArrayList<Cliente> serv = new ArrayList<Cliente>();
        Cliente servFunc = new Cliente();
        String nome = txtNomeCadClient.getText();
        String cpf = txtCadClienteCpf.getText();
        String tel = txtCadClienteTelefone.getText();
        String email = txtCadClienteEmail.getText();
        String ender = txtCadClienteEndereco.getText();
        String nasc = txtCadClienteNasc.getText();
        String sex = txtCadClienteTipo.getText();
        String civil = txtCadClienteEstCivil.getText();
        Boolean ativado = BtnTglSituacao.isSelected();
        serv=servFunc.ler();
        for (Cliente obj :  serv) {
            if (obj.cpf.equals(cpf)){
                serv.remove(obj);
                servFunc.gravar(serv);
                txtNomeCadClient.setText("|");
                txtCadClienteCpf.setText("|");
                txtCadClienteTelefone.setText("|");
                txtCadClienteEmail.setText("|");
                txtCadClienteEndereco.setText("|");
                txtCadClienteNasc.setText("|");
                txtCadClienteTipo.setText("|");
                txtCadClienteEstCivil.setText("|");
                BtnTglSituacao.setSelected(false);
                lblCadClienteErro.setText("Deletado com sucesso");
            }
        }
        /*Outro metetodo para deletar um cliente especifico
        for (int i = 0; i < serv.size(); ++i) {
            Cliente obj = (Cliente) serv.get(i);
            if (obj.cpf.equals(cpf)){
                serv.remove(i);
                txtNomeCadClient.setText(" ");
                txtCadClienteCpf.setText(" ");
                txtCadClienteTelefone.setText(" ");
                txtCadClienteEmail.setText(" ");
                txtCadClienteEndereco.setText(" ");
                txtCadClienteNasc.setText(" ");
                txtCadClienteTipo.setText(" ");
                txtCadClienteEstCivil.setText(" ");
                BtnTglSituacao.setSelected(false);
                lblCadClienteErro.setText("Deletado com sucesso");
            }
        }
        */
        
    }//GEN-LAST:event_btnConfDelClienteActionPerformed

    private void btnCadFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadFuncActionPerformed
        ArrayList<Funcionario> serv = new ArrayList<Funcionario>();
        Funcionario servFunc = new Funcionario();
        String nome = txtCadFunc.getText();
        String cpf = txtCadFuncCpf.getText();
        String tel = txtCadFuncTel.getText();
        String email = txtCadFuncEmail.getText();
        serv=servFunc.ler();
        
        if (btnAltFunc.isSelected()){
            for (Funcionario obj :  serv) {
                if (obj.cpf.equals(cpf)){
                    obj.nome=nome;
                    obj.cpf=cpf;
                    obj.telefone=tel;
                    obj.email=email;
                    servFunc.gravar(serv);
                    txtCadFunc.setText("|");
                    txtCadFuncCpf.setText("|");
                    txtCadFuncTel.setText("|");
                    txtCadFuncEmail.setText("|");
                    lblCadFuncErro.setText("Alterado com sucesso");
                }
            }
        } else {
            int t=0;
            if (serv.size()==0){
                    if (t==0){
                    serv.add(new Funcionario(nome,cpf,tel,email));
                    servFunc.gravar(serv);
                    txtCadFunc.setText("|");
                    txtCadFuncCpf.setText("|");
                    txtCadFuncTel.setText("|");
                    txtCadFuncEmail.setText("|");
                    lblCadFuncErro.setText("Cadastrado com sucesso");
                    btnCadFunc.setVisible(false);
                    btnVerfFunc.setVisible(true);
                }
            }else{
                for (Funcionario obj :  serv) {
                    if (obj.cpf.equals(cpf)){
                        t++;
                        lblCadFuncErro.setText("Funcionario ja cadastrado.por favor altere-o.");
                    } else{
                        if (t==0){
                        serv.add(new Funcionario(nome,cpf,tel,email));
                        servFunc.gravar(serv);
                        txtCadFunc.setText("|");
                        txtCadFuncCpf.setText("|");
                        txtCadFuncTel.setText("|");
                        txtCadFuncEmail.setText("|");
                        lblCadFuncErro.setText("Cadastrado com sucesso");
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnCadFuncActionPerformed

    private void btnVerfFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerfFuncActionPerformed
        ArrayList<Funcionario> Cvec = new ArrayList<Funcionario>();
        Funcionario c1 = new Funcionario();
        String nome = txtCadFunc.getText();
        String cpf = txtCadFuncCpf.getText();
        String tel = txtCadFuncTel.getText();
        String email = txtCadFuncEmail.getText();
        Cvec=c1.ler();
        int t=0;
        
        if (Cvec.size() > 0){
            for (Funcionario obj :  Cvec) {
                if (obj.cpf.equals(cpf)){
                    t++;
                    btnDeleteFuncionario.setVisible(true);
                    btnCadFunc.setVisible(true);
                    btnAltFunc.setVisible(true);
                    lblCadFuncErro.setText("Cadastro encontrado!");
                    txtCadFunc.setText(obj.nome);
                    txtCadFuncCpf.setText(obj.cpf);
                    txtCadFuncTel.setText(obj.telefone);
                    txtCadFuncEmail.setText(obj.email);
                }
            }
        }
        if (t==0){
            lblCadFuncErro.setText("Cadastro Não encontrado");
            btnCadFunc.setVisible(true);
            btnAltFunc.setVisible(false);
            btnDeleteFuncionario.setVisible(false);
        }
    }//GEN-LAST:event_btnVerfFuncActionPerformed

    private void btnNegDelFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegDelFuncActionPerformed
        btnDeleteFuncionario.setVisible(true);
        btnNegDelFunc.setVisible(false);
        btnConfDelFunc.setVisible(false);
    }//GEN-LAST:event_btnNegDelFuncActionPerformed

    private void btnConfDelFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfDelFuncActionPerformed
        btnNegDelFunc.setVisible(false);
        btnConfDelFunc.setVisible(false);
        ArrayList<Funcionario> serv = new ArrayList<Funcionario>();
        Funcionario servFunc = new Funcionario();
        String nome = txtCadFunc.getText();
        String cpf = txtCadFuncCpf.getText();
        String tel = txtCadFuncTel.getText();
        String email = txtCadFuncEmail.getText();
        serv=servFunc.ler();
        for (Funcionario obj :  serv) {
            if (obj.cpf.equals(cpf)){
                serv.remove(obj);
                servFunc.gravar(serv);
                txtCadFunc.setText("|");
                txtCadFuncCpf.setText("|");
                txtCadFuncTel.setText("|");
                txtCadFuncEmail.setText("|");
                lblCadFuncErro.setText("Deletado com sucesso");
            }
        }
    }//GEN-LAST:event_btnConfDelFuncActionPerformed

    private void btnVerfAtendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerfAtendActionPerformed
        ArrayList<Atendimento> AtendArray = new ArrayList<Atendimento>();
        Atendimento AtendFunc = new Atendimento();
        AtendArray = AtendFunc.ler();
        ArrayList<Cliente> ClienteArray = new ArrayList<Cliente>();
        Cliente FuncCliente = new Cliente();
        ClienteArray=FuncCliente.ler();
        ArrayList<Funcionario> FuncArray = new ArrayList<Funcionario>();
        Funcionario FuncFunc = new Funcionario();
        FuncArray=FuncFunc.ler();
        ArrayList<servico> servArray = new ArrayList<servico>();
        servico servFunc = new servico();
        servArray=servFunc.ler();
        String data=txtDataAtendimento.getText();
        String hora=txtHorarioAtendimento.getText();
        int t2=0;
        
        String [] TempFunc=new String[FuncArray.size()];
        for (int i = 0; i < FuncArray.size(); ++i) {
            Funcionario obj = (Funcionario) FuncArray.get(i);
            TempFunc[i]=obj.cpf;
        }
        Funcionario Func = new Funcionario();
        String CpfTemp=TempFunc[listFuncDispo.getSelectedIndex()];
        for (Funcionario obj :  FuncArray) {
            if (obj.cpf.equals(CpfTemp)){
                Func=obj;
            }
        }
        if  (AtendArray.size()>0){
            for (Atendimento obj :  AtendArray) {
                if (obj.data.equals(data) && obj.horario.equals(hora) && obj.func.cpf.equals(Func.cpf)){
                    t2++;
                    lblAtend.setText("Cadastro encontrado!");
                    txtDataAgenda.setText(obj.data);
                    txtHorarioAtendimento.setText(obj.horario);
                    txtDescAtendmiento.setText(obj.desc);
                    switch(obj.status){
                        case "Agendado":
                            listStatusAtendmiento.setSelectedIndex(0);
                            break;
                        case "Cancelado":
                            listStatusAtendmiento.setSelectedIndex(1);
                            break;
                        case "Realizado":
                            listStatusAtendmiento.setSelectedIndex(2);
                            break;
                    }
                    int t3=0;
                    for (Funcionario obj2 :  FuncArray) {
                        if (obj.func.cpf.equals(obj2.cpf)){
                            listFuncDispo.setSelectedIndex(t3);
                        } else{
                            t3++;
                        }
                    }
                    t3=0;
                    for (Cliente obj2 :  ClienteArray) {
                        if (obj.cliente.cpf.equals(obj2.cpf)){
                            listClienteDispo.setSelectedIndex(t3);
                        } else{
                            t3++;
                        }
                    }
                    t3=0;
                    for (servico obj2 :  servArray) {
                        if (obj.serv.Nome.equals(obj2.Nome)){
                            listServAtend.setSelectedIndex(t3);
                        } else{
                            t3++;
                        }
                    }
                    t3=0;
                }
            }
        }
        if (t2==0){
            lblAtend.setText("Cadastro não encontrado!");
        }
    }//GEN-LAST:event_btnVerfAtendActionPerformed

    private void btnCadastroAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroAtendimentoActionPerformed
        /*
        listFuncDispo.getSelectedIndex();retorna int relacionado a cada valor na lista ex: Varios objetos na lista, se selecionado o primeiro retrona 0
        */
        ArrayList<Atendimento> AtendArray = new ArrayList<Atendimento>();
        Atendimento AtendFunc = new Atendimento();
        AtendArray = AtendFunc.ler();
        ArrayList<Cliente> ClienteArray = new ArrayList<Cliente>();
        Cliente FuncCliente = new Cliente();
        ClienteArray=FuncCliente.ler();
        ArrayList<Funcionario> FuncArray = new ArrayList<Funcionario>();
        Funcionario FuncFunc = new Funcionario();
        FuncArray=FuncFunc.ler();
        ArrayList<servico> ServArray = new ArrayList<servico>();
        servico servFunc = new servico();
        ServArray=servFunc.ler();
        String [] TempCliente=new String[ClienteArray.size()];
        String [] TempFunc=new String[FuncArray.size()];
        
        for (int i = 0; i < ClienteArray.size(); ++i) {
            Cliente obj = (Cliente) ClienteArray.get(i);
            TempCliente[i]=obj.cpf;
        }
        for (int i = 0; i < FuncArray.size(); ++i) {
            Funcionario obj = (Funcionario) FuncArray.get(i);
            TempFunc[i]=obj.cpf;
        }
        
        Funcionario Func = new Funcionario();
        String CpfTemp=TempFunc[listFuncDispo.getSelectedIndex()];
        for (Funcionario obj :  FuncArray) {
            if (obj.cpf.equals(CpfTemp)){
                Func=obj;
            }
        }
        Cliente Clit = new Cliente();
        CpfTemp=TempCliente[listClienteDispo.getSelectedIndex()];
        for (Cliente obj :  ClienteArray) {
            if (obj.cpf.equals(CpfTemp)){
                Clit=obj;
            }
        }
        String [] TempServ=new String[ServArray.size()];
        for (int i = 0; i < ServArray.size(); ++i) {
            servico obj = (servico) ServArray.get(i);
            TempServ[i]=obj.Nome;
        }
        servico serv = new servico();
        CpfTemp=TempServ[listServAtend.getSelectedIndex()];
        for (servico obj :  ServArray) {
            if (obj.Nome.equals(CpfTemp)){
                serv=obj;
            }
        }
        String data=txtDataAtendimento.getText();
        String hora=txtHorarioAtendimento.getText();
        String desc=txtDescAtendmiento.getText();
        int t=listStatusAtendmiento.getSelectedIndex();
        String status="";
        switch(t){
            case 0:
                status="Agendado";
                break;
            case 1:
                status="Cancelado";
                break;
            case 2:
                status="Realizado";
                break;
        }
        if (btnAltAtend.isSelected()){
            for (Atendimento obj: AtendArray){
                int tempHora = Integer.parseInt(hora);
                
                if (((tempHora>=8&&tempHora<=10)||(tempHora>=14&&tempHora<=16)) && 
                    obj.data.equals(data) && obj.horario.equals(hora)
                    && obj.func.cpf.equals(Func.cpf)){
                    obj.cliente=Clit;
                    obj.data=data;
                    obj.desc=desc;
                    obj.func=Func;
                    obj.horario=hora;
                    obj.status=status;
                    obj.serv=serv;
                    AtendFunc.gravar(AtendArray);
                    txtDataAgenda.setText("DD/MM/AA");
                    txtHorarioAtendimento.setText("HH:MM");
                    txtDescAtendmiento.setText("");
                    lblAtend.setText("Alterado com sucesso");
                }else if(((tempHora>=8&&tempHora<=10)||(tempHora>=14&&tempHora<=16))){
                //lblAtend.setText("Horario Disponivel");
                } else {
                lblAtend.setText("Ofina fora do horario de funcionamento");
                }
            }
        } else{
            int t2=0;
            if(AtendArray.size()==0){
                if (t2==0){
                    AtendArray.add(new Atendimento((AtendArray.size()+1),data,hora,Func,Clit,status,desc,serv));
                    AtendFunc.gravar(AtendArray);
                    txtDataAgenda.setText("DD/MM/AA");
                    txtHorarioAtendimento.setText("HH:MM");
                    txtDescAtendmiento.setText("");
                    lblAtend.setText("Cadastrado com sucesso");
                }
            } else {
                for (Atendimento obj :  AtendArray){
                    int tempHora = Integer.parseInt(hora);
                    int tempHoraDps=tempHora+1;
                    int tempHoraAnt=tempHora-1;
                    String HoraAnt = String.valueOf(tempHoraAnt);
                    String HoraDps = String.valueOf(tempHoraDps);
                    if (((tempHora>=8&&tempHora<=10)||(tempHora>=14&&tempHora<=16)) && 
                    obj.data.equals(data) && (obj.horario.equals(hora) || obj.horario.equals(HoraAnt) || obj.horario.equals(HoraDps)) 
                    && obj.func.cpf.equals(Func.cpf)){
                        t++;
                        lblAtend.setText("Horario Ocupado do "+Func.nome);
                    } else if(((tempHora>=8&&tempHora<=10)||(tempHora>=14&&tempHora<=16))){
                        AtendArray.add(new Atendimento((AtendArray.size()+1),data,hora,Func,Clit,status,desc,serv));
                        AtendFunc.gravar(AtendArray);
                        txtDataAgenda.setText("DD/MM/AA");
                        txtHorarioAtendimento.setText("HH:MM");
                        txtDescAtendmiento.setText("");
                        lblAtend.setText("Cadastrado com sucesso");
                    } else {
                     lblAtend.setText("Ofina fora do horario de funcionamento");
                    }
                }
            }
        }
    }//GEN-LAST:event_btnCadastroAtendimentoActionPerformed

    private void btnVerfAgdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerfAgdActionPerformed
        txtVerfAgd.setVisible(false);
        btnVerfAgd.setVisible(false);
        String dataVerf=txtVerfAgd.getText();
        ArrayList<Atendimento> AtendArray = new ArrayList<Atendimento>();
        Atendimento AtendFunc = new Atendimento();
        AtendArray = AtendFunc.ler();
        String tempS="";
        for (Atendimento obj :  AtendArray){
            if (obj.data.equals(dataVerf)){
                tempS+="\n*****************************\n";
                tempS+="data: "+obj.data+"\n";
                tempS+="hora: "+obj.horario+"\n";
                tempS+="Funcionario: "+obj.func.nome+"\n";
                tempS+="Cliente: "+obj.cliente.nome+"\n";
                tempS+="Status: "+obj.status+"\n";
                tempS+="Descrição: "+obj.desc+"\n";
                tempS+="Serviço: "+obj.serv.Nome+" \n Descrição: "+obj.serv.Desc+"\n";
            } else if (dataVerf.equals("") || dataVerf.equals("DDMMAA")){
                tempS+="\n*****************************\n";
                tempS+="data: "+obj.data+"\n";
                tempS+="hora: "+obj.horario+"\n";
                tempS+="Funcionario: "+obj.func.nome+"\n";
                tempS+="Cliente: "+obj.cliente.nome+"\n";
                tempS+="Status: "+obj.status+"\n";
                tempS+="Descrição: "+obj.desc+"\n";
                tempS+="Serviço: "+obj.serv.Nome+" \n Descrição: "+obj.serv.Desc+"\n";
            }
        }
        txtVerfAgd.setText("");
        txtAreaRelato.setText(tempS);
    }//GEN-LAST:event_btnVerfAgdActionPerformed

    private void btnVerfAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerfAgendaActionPerformed
         // TODO add your handling code here:
        String dataVerf=txtDataAgenda.getText();
        ArrayList<Atendimento> AtendArray = new ArrayList<Atendimento>();
        Atendimento AtendFunc = new Atendimento();
        AtendArray = AtendFunc.ler();
        String tempS="";
        for (Atendimento obj :  AtendArray){
            if (obj.data.equals(dataVerf)){
                tempS+="\n*****************************\n";
                tempS+="data: "+obj.data+"\n";
                tempS+="hora: "+obj.horario+"\n";
                tempS+="Funcionario: "+obj.func.nome+"\n";
                tempS+="Cliente: "+obj.cliente.nome+"\n";
                tempS+="Status: "+obj.status+"\n";
                tempS+="Descrição: "+obj.desc+"\n";
                tempS+="Serviço: "+obj.serv.Nome+"Descrição: "+obj.serv.Desc+"\n";
            }
        }
        txtAgenDia.setText(tempS);
    }//GEN-LAST:event_btnVerfAgendaActionPerformed

    private void btnVerfMarcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerfMarcarActionPerformed
        ArrayList<Atendimento> AtendArray = new ArrayList<Atendimento>();
        Atendimento AtendFunc = new Atendimento();
        AtendArray = AtendFunc.ler();
        ArrayList<Cliente> ClienteArray = new ArrayList<Cliente>();
        Cliente FuncCliente = new Cliente();
        ClienteArray=FuncCliente.ler();
        ArrayList<Funcionario> FuncArray = new ArrayList<Funcionario>();
        Funcionario FuncFunc = new Funcionario();
        FuncArray=FuncFunc.ler();
        ArrayList<servico> servArray = new ArrayList<servico>();
        servico servFunc = new servico();
        servArray=servFunc.ler();
        String data=txtDataMarcar.getText();
        String hora=txtHorarioMarcar.getText();
        int t2=0;
        String [] TempFunc=new String[FuncArray.size()];
        for (int i = 0; i < FuncArray.size(); ++i) {
            Funcionario obj = (Funcionario) FuncArray.get(i);
            TempFunc[i]=obj.cpf;
        }
        Funcionario Func = new Funcionario();
        String CpfTemp=TempFunc[listMarcFunc.getSelectedIndex()];

        for (Funcionario obj :  FuncArray) {
            if (obj.cpf.equals(CpfTemp)){
                Func=obj;
            }
        }
        if (AtendArray.size()==0){
            BtnCadMarcar.setVisible(true);
            btnAltHor.setVisible(true);
        }
        if  (AtendArray.size()>0){
            for (Atendimento obj :  AtendArray) {
                int tempHora = Integer.parseInt(hora);
                int tempHoraDps=tempHora+1;
                int tempHoraAnt=tempHora-1;
                String HoraAnt = String.valueOf(tempHoraAnt);
                String HoraDps = String.valueOf(tempHoraDps);
                if (obj.data.equals(data) && obj.horario.equals(hora) && obj.func.cpf.equals(Func.cpf)){
                    t2++;
                    lblMarc.setText("Cadastro encontrado!");
                    BtnCadMarcar.setVisible(true);
                    btnAltHor.setVisible(true);
                    txtDataMarcar.setText(obj.data);
                    txtHorarioMarcar.setText(obj.horario);
                    int t3=0;
                    for (Funcionario obj2 :  FuncArray) {
                        if (obj.func.cpf.equals(obj2.cpf)){
                            listMarcFunc.setSelectedIndex(t3);
                        } else{
                            t3++;
                        }
                    }
                    t3=0;
                    for (Cliente obj2 :  ClienteArray) {
                        if (obj.cliente.cpf.equals(obj2.cpf)){
                            listMarcCliente.setSelectedIndex(t3);
                        } else{
                            t3++;
                        }
                    }
                    
                    t3=0;
                    for (servico obj2 :  servArray) {
                        if (obj.serv.Nome.equals(obj2.Nome)){
                            listMarcServ.setSelectedIndex(t3);
                        } else{
                            t3++;
                        }
                    }
                    t3=0;
                }
            }
        }
        if (t2==0){
            lblMarc.setText("Cadastro não encontrado!");
        }
    }//GEN-LAST:event_btnVerfMarcarActionPerformed

    private void BtnCadMarcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCadMarcarActionPerformed
        ArrayList<Atendimento> AtendArray = new ArrayList<Atendimento>();
        Atendimento AtendFunc = new Atendimento();
        AtendArray = AtendFunc.ler();
        ArrayList<Cliente> ClienteArray = new ArrayList<Cliente>();
        Cliente FuncCliente = new Cliente();
        ClienteArray=FuncCliente.ler();
        ArrayList<Funcionario> FuncArray = new ArrayList<Funcionario>();
        Funcionario FuncFunc = new Funcionario();
        FuncArray=FuncFunc.ler();
        String [] TempCliente=new String[ClienteArray.size()];
        String [] TempFunc=new String[FuncArray.size()];
        for (int i = 0; i < ClienteArray.size(); ++i) {
            Cliente obj = (Cliente) ClienteArray.get(i);
            TempCliente[i]=obj.cpf;
        }
        for (int i = 0; i < FuncArray.size(); ++i) {
            Funcionario obj = (Funcionario) FuncArray.get(i);
            TempFunc[i]=obj.cpf;
        }
        Funcionario Func = new Funcionario();
        String CpfTemp=TempFunc[listMarcFunc.getSelectedIndex()];

        for (Funcionario obj :  FuncArray) {
            if (obj.cpf.equals(CpfTemp)){
                Func=obj;
            }
        }
        Cliente Clit = new Cliente();
        CpfTemp=TempCliente[listMarcCliente.getSelectedIndex()];
        for (Cliente obj :  ClienteArray) {
            if (obj.cpf.equals(CpfTemp)){
                Clit=obj;
            }
        }
        ArrayList<servico> ServArray = new ArrayList<servico>();
        servico servFunc = new servico();
        ServArray=servFunc.ler();
        String [] TempServ=new String[ServArray.size()];
        for (int i = 0; i < ServArray.size(); ++i) {
            servico obj = (servico) ServArray.get(i);
            TempServ[i]=obj.Nome;
        }
        servico serv = new servico();
        CpfTemp=TempServ[listMarcServ.getSelectedIndex()];
        if(listMarcServ.isSelectionEmpty()){
            lblMarc.setText("Selecione algo na area de Serviços");
        }
        for (servico obj :  ServArray) {
            if (obj.Nome.equals(CpfTemp)){
                serv=obj;
            }
        }
        String data=txtDataMarcar.getText();
        String hora=txtHorarioMarcar.getText();
        if (btnAltHor.isSelected()){
            for (Atendimento obj: AtendArray){
                int tempHora = Integer.parseInt(hora);
                int tempHoraDps=tempHora+1;
                int tempHoraAnt=tempHora-1;
                String HoraAnt = String.valueOf(tempHoraAnt);
                String HoraDps = String.valueOf(tempHoraDps);
                if ((tempHora<16&&tempHora<10&&tempHora>14&&tempHora>8) && 
                    obj.data.equals(data) && (obj.horario.equals(hora) || obj.horario.equals(HoraAnt) || obj.horario.equals(HoraDps)) 
                    && obj.func.cpf.equals(Func.cpf)){
                    obj.cliente=Clit;
                    obj.data=data;
                    obj.desc="Horario Marcado";
                    obj.func=Func;
                    obj.horario=hora;
                    obj.status="Agendado";
                    obj.serv=serv;
                    AtendFunc.gravar(AtendArray);
                    txtDataMarcar.setText("DD/MM/AA");
                    txtHorarioMarcar.setText("HH:MM");
                    lblMarc.setText("Alterado com sucesso");
                    } else if(!((tempHora<8||tempHora>12)||(tempHora<14||tempHora>18))){
                        lblMarc.setText("Ofina fora do horario de funcionamento");
                    }
            }
        } else{
            int t=0;
            if(AtendArray.size()==0){
                if (t==0){
                    AtendArray.add(new Atendimento((AtendArray.size()+1),data,hora,Func,Clit,"Agendado","Horario Marcado",serv));
                    AtendFunc.gravar(AtendArray);
                    txtDataMarcar.setText("DD/MM/AA");
                    txtHorarioMarcar.setText("HH:MM");
                    lblMarc.setText("Cadastrado com sucesso");
                }
            } else {
                for (Atendimento obj :  AtendArray){
                    int tempHora = Integer.parseInt(hora);
                    int tempHoraDps=tempHora+1;
                    int tempHoraAnt=tempHora-1;
                    String HoraAnt = String.valueOf(tempHoraAnt);
                    String HoraDps = String.valueOf(tempHoraDps);
                    if (((tempHora>=8&&tempHora<=10)||(tempHora>=14&&tempHora<=16)) && 
                    obj.data.equals(data) && (obj.horario.equals(hora) || obj.horario.equals(HoraAnt) || obj.horario.equals(HoraDps)) 
                    && obj.func.cpf.equals(Func.cpf)){
                        t++;
                        lblMarc.setText("Horario Ocupado do "+Func.nome);
                    } else if(((tempHora>=8&&tempHora<=10)||(tempHora>=14&&tempHora<=16))){
                        AtendArray.add(new Atendimento((AtendArray.size()+1),data,hora,Func,Clit,"Agendado","Horario Marcado",serv));
                        AtendFunc.gravar(AtendArray);
                        txtDataMarcar.setText("DD/MM/AA");
                        txtHorarioMarcar.setText("HH:MM");
                        lblMarc.setText("Cadastrado com sucesso");
                    } else{
                        lblMarc.setText("Ofina fora do horario de funcionamento");
                    }
                }
            }
        }
    }//GEN-LAST:event_BtnCadMarcarActionPerformed

    private void btnAltHorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_btnAltHorStateChanged
        // TODO add your handling code here:
        if (btnAltHor.isSelected()){
            txtDataMarcar.setEditable(false);
            txtHorarioMarcar.setEditable(false);
        } else {
            txtDataMarcar.setEditable(true);
            txtHorarioMarcar.setEditable(true);
        }
    }//GEN-LAST:event_btnAltHorStateChanged

    private void btnVerfHoraDispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerfHoraDispActionPerformed
         // TODO add your handling code here:
        ArrayList<Atendimento> AtendArray = new ArrayList<Atendimento>();
        Atendimento AtendFunc = new Atendimento();
        AtendArray = AtendFunc.ler();
        ArrayList<Funcionario> FuncArray = new ArrayList<Funcionario>();
        Funcionario FuncFunc = new Funcionario();
        FuncArray=FuncFunc.ler();
        String [] TempFunc=new String[FuncArray.size()];
        for (int i = 0; i < FuncArray.size(); ++i) {
            Funcionario obj = (Funcionario) FuncArray.get(i);
            TempFunc[i]=obj.cpf;
        }
        Funcionario Func = new Funcionario();
        String CpfTemp=TempFunc[listMarcFunc.getSelectedIndex()];

        for (Funcionario obj :  FuncArray) {
            if (obj.cpf.equals(CpfTemp)){
                Func=obj;
            }
        }
        String data=txtDataMarcar.getText();
        String hora=txtHorarioMarcar.getText();
        for (Atendimento obj :  AtendArray){
            int tempHora = Integer.parseInt(hora);
            int tempHoraDps=tempHora+1;
            int tempHoraAnt=tempHora-1;
            String HoraAnt = String.valueOf(tempHoraAnt);
            String HoraDps = String.valueOf(tempHoraDps);
            if (((tempHora>=8&&tempHora<=10)||(tempHora>=14&&tempHora<=16)) && 
               obj.data.equals(data) && (obj.horario.equals(hora) || obj.horario.equals(HoraAnt) || obj.horario.equals(HoraDps)) 
               && obj.func.cpf.equals(Func.cpf)){
                lblMarc.setText("Horario Ocupado do "+Func.nome);
            } else if(((tempHora>=8&&tempHora<=10)||(tempHora>=14&&tempHora<=16))){
                lblMarc.setText("Horario Disponivel");
            } else {
                lblMarc.setText("Ofina fora do horario de funcionamento");
            }
        }
    }//GEN-LAST:event_btnVerfHoraDispActionPerformed

    private void txtDataRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataRemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataRemActionPerformed

    private void btnVerfRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerfRemActionPerformed
        // TODO add your handling code here:
        btnVerfRem.setVisible(false);
        btnAltRem.setVisible(true);
        ArrayList<Atendimento> AtendArray = new ArrayList<Atendimento>();
        Atendimento AtendFunc = new Atendimento();
        AtendArray = AtendFunc.ler();
        ArrayList<Cliente> ClienteArray = new ArrayList<Cliente>();
        Cliente FuncCliente = new Cliente();
        ClienteArray=FuncCliente.ler();
        ArrayList<Funcionario> FuncArray = new ArrayList<Funcionario>();
        Funcionario FuncFunc = new Funcionario();
        FuncArray=FuncFunc.ler();
        String data=txtDataRem.getText();
        String hora=txtHoraRem.getText();
        int t2=0;
        String [] TempFunc=new String[FuncArray.size()];
        for (int i = 0; i < FuncArray.size(); ++i) {
            Funcionario obj = (Funcionario) FuncArray.get(i);
            TempFunc[i]=obj.cpf;
        }
        Funcionario Func = new Funcionario();
        String CpfTemp=TempFunc[listFuncRem.getSelectedIndex()];
        for (Funcionario obj :  FuncArray) {
            if (obj.cpf.equals(CpfTemp)){
                Func=obj;
            }
        }
        if  (AtendArray.size()>0){
            for (Atendimento obj :  AtendArray) {
                if (obj.data.equals(data) && obj.horario.equals(hora) && obj.func.cpf.equals(Func.cpf)){
                    t2++;
                    lblRem.setText("Cadastro encontrado!");
                    txtDataMarcar.setText(obj.data);
                    txtHorarioMarcar.setText(obj.horario);
                    int t3=0;
                    for (Funcionario obj2 :  FuncArray) {
                        if (obj.func.cpf.equals(obj2.cpf)){
                            listFuncDispo.setSelectedIndex(t3);
                        } else{
                            t3++;
                        }
                    }
                    txtClienteRem.setText("Nome: "+obj.cliente.nome+" Cpf:"+obj.cliente.cpf);
                    txtServRem.setText("Nome: "+obj.serv.Nome+" Descrição: " +obj.serv.Desc);
                    toAlter=obj;
                    toAlter.data=obj.data;
                    toAlter.horario=obj.horario;
                    listFuncRem.setVisible(false);
                }
            }
        }
        if (t2==0){
            lblRem.setText("Cadastro não encontrado!");
        }
    }//GEN-LAST:event_btnVerfRemActionPerformed

    private void btnAltHorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltHorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAltHorActionPerformed

    private void btnAltRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltRemActionPerformed
        // TODO add your handling code here:
        
        ArrayList<Atendimento> AtendArray = new ArrayList<Atendimento>();
        Atendimento AtendFunc = new Atendimento();
        AtendArray = AtendFunc.ler();
        ArrayList<Cliente> ClienteArray = new ArrayList<Cliente>();
        Cliente FuncCliente = new Cliente();
        ClienteArray=FuncCliente.ler();
        ArrayList<Funcionario> FuncArray = new ArrayList<Funcionario>();
        Funcionario FuncFunc = new Funcionario();
        FuncArray=FuncFunc.ler();
        String [] TempFunc=new String[FuncArray.size()];
        for (int i = 0; i < FuncArray.size(); ++i) {
            Funcionario obj = (Funcionario) FuncArray.get(i);
            TempFunc[i]=obj.cpf;
        }
        Funcionario Func = new Funcionario();
        String CpfTemp=TempFunc[listFuncRem.getSelectedIndex()];

        for (Funcionario obj :  FuncArray) {
            if (obj.cpf.equals(CpfTemp)){
                Func=obj;
            }
        }
        
        String data=txtDataRem.getText();
        String hora=txtHoraRem.getText();
        int t=0;
        for (Atendimento obj: AtendArray){
            int tempHora = Integer.parseInt(hora);
            int tempHoraDps=tempHora+1;
            int tempHoraAnt=tempHora-1;
            String HoraAnt = String.valueOf(tempHoraAnt);
            String HoraDps = String.valueOf(tempHoraDps);
            if (((tempHora>=8&&tempHora<=10)||(tempHora>=14&&tempHora<=16)) && obj.data.equals(toAlter.data) && 
            obj.horario.equals(toAlter.horario) && obj.func.cpf.equals(toAlter.func.cpf)){
                btnVerfRem.setVisible(true);
                btnAltRem.setVisible(false);
                listFuncRem.setVisible(true);
                t++;
                obj.data=data;
                obj.horario=hora;
                AtendFunc.gravar(AtendArray);
                txtDataRem.setText("DDMMAA");
                txtHoraRem.setText("HH");
                lblRem.setText("Alterado com sucesso");
            } 
            if(t==0){
                lblRem.setText("Ofina fora do horario de funcionamento");
            }
        }
    }//GEN-LAST:event_btnAltRemActionPerformed

    private void btnRelatoPorCleinteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatoPorCleinteActionPerformed
        // TODO add your handling code here:
        btnRelData.setVisible(true);
        btnRelNome.setVisible(true);
        btnRelCdg.setVisible(true);
    }//GEN-LAST:event_btnRelatoPorCleinteActionPerformed

    private void btnRelDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelDataActionPerformed
        // TODO add your handling code here:
        
        btnRelData.setVisible(false);
        btnRelNome.setVisible(false);
        btnRelCdg.setVisible(false);
        FormataDatas formatador = new FormataDatas();
        ArrayList<Atendimento> AtendArray = new ArrayList<Atendimento>();
        Atendimento AtendFunc = new Atendimento();
        AtendArray = AtendFunc.ler();
        ArrayList<Date> Datas = new ArrayList<Date>();
        String tempS="";
        for (Atendimento obj :  AtendArray){
            Datas.add(formatador.StringToDate(obj.data));
        }
        Collections.sort(Datas);
        for (Date obj: Datas){
            for(Atendimento obj2 :  AtendArray){
                if (obj.equals(formatador.StringToDate(obj2.data))){
                    tempS+="\n*****************************\n";
                    tempS+="data: "+obj2.data+"\n";
                    tempS+="hora: "+obj2.horario+"\n";
                    tempS+="Funcionario: "+obj2.func.nome+"\n";
                    tempS+="Cliente: "+obj2.cliente.nome+"\n";
                    tempS+="Status: "+obj2.status+"\n";
                    tempS+="Descrição: "+obj2.desc+"\n";
                    tempS+="Nome do Serviço: "+obj2.serv.Nome+"\n";
                    tempS+="Descrição: "+obj2.serv.Desc+"\n";
                }
            }
        }
        txtAreaRelato.setText(tempS);
    }//GEN-LAST:event_btnRelDataActionPerformed

    private void btnRelNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelNomeActionPerformed
        // TODO add your handling code here:
        btnRelData.setVisible(false);
        btnRelNome.setVisible(false);
        btnRelCdg.setVisible(false);
        ArrayList<Atendimento> AtendArray = new ArrayList<Atendimento>();
        Atendimento AtendFunc = new Atendimento();
        AtendArray = AtendFunc.ler();
        ArrayList<String> Nomes = new ArrayList<String>();
        String tempS="";
        for (Atendimento obj :  AtendArray){
            Nomes.add(obj.serv.Nome);
        }
        Collections.sort(Nomes);
        System.out.println(Nomes);
        FormataDatas formatador = new FormataDatas();
        ArrayList<Date> Datas = new ArrayList<Date>();
        for (Atendimento obj :  AtendArray){
            Datas.add(formatador.StringToDate(obj.data));
        }
        int i=0;
        Collections.sort(Datas);
        System.out.println(Datas);
        boolean Dup=false;
        for (Date obj3: Datas){
            for(Atendimento obj2 :  AtendArray){
                for(String obj :  Nomes){
                    if (obj.equals(obj2.serv.Nome) && obj3.equals(formatador.StringToDate(obj2.data))){
                        tempS+="\n*****************************\n";
                        tempS+="Nome do Serviço: "+obj2.serv.Nome+"\n";
                        tempS+="Descrição do Serviço: "+obj2.serv.Desc+"\n";
                        tempS+="data: "+obj2.data+"\n";
                        tempS+="hora: "+obj2.horario+"\n";
                        tempS+="Funcionario: "+obj2.func.nome+"\n";
                        tempS+="Cliente: "+obj2.cliente.nome+"\n";
                        tempS+="Status: "+obj2.status+"\n";
                        tempS+="Descrição: "+obj2.desc+"\n";
                        break;
                    }
                }
            }
        }
        txtAreaRelato.setText(tempS);
    }//GEN-LAST:event_btnRelNomeActionPerformed

    private void btnRelCdgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelCdgActionPerformed
        // TODO add your handling code here:
        btnRelData.setVisible(false);
        btnRelNome.setVisible(false);
        btnRelCdg.setVisible(false);
        ArrayList<Atendimento> AtendArray = new ArrayList<Atendimento>();
        Atendimento AtendFunc = new Atendimento();
        AtendArray = AtendFunc.ler();
        ArrayList<Integer> Cdgs = new ArrayList<Integer>();
        String tempS="";
        for (Atendimento obj :  AtendArray){
            Cdgs.add(obj.getCdg());
        }
        Collections.sort(Cdgs);
        for (Integer obj: Cdgs){
            for(Atendimento obj2 :  AtendArray){
                if (obj.equals(obj2.getCdg())){
                    tempS+="\n*****************************\n";
                    tempS+="Código do Serviço: "+obj2.getCdg()+"\n";
                    tempS+="Nome do Serviço: "+obj2.serv.Nome+"\n";
                    tempS+="Descrição do Serviço: "+obj2.serv.Desc+"\n";
                    tempS+="data: "+obj2.data+"\n";
                    tempS+="hora: "+obj2.horario+"\n";
                    tempS+="Funcionario: "+obj2.func.nome+"\n";
                    tempS+="Cliente: "+obj2.cliente.nome+"\n";
                    tempS+="Status: "+obj2.status+"\n";
                    tempS+="Descrição: "+obj2.desc+"\n";
                }
            }
        }
        txtAreaRelato.setText(tempS);
    }//GEN-LAST:event_btnRelCdgActionPerformed

    private void txtDataAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataAtendimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataAtendimentoActionPerformed
    /*public static void FuncErroBanco(String erro){
        lblVerificaBanco.setText(erro);
    }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Agenda;
    private javax.swing.JPanel Atendimentos;
    private javax.swing.JButton BtnCadMarcar;
    private javax.swing.JToggleButton BtnTglSituacao;
    private javax.swing.JPanel Clientes;
    private javax.swing.JPanel Funcionarios;
    private javax.swing.JButton btnAgendaRelato;
    private javax.swing.JToggleButton btnAltAtend;
    public javax.swing.JToggleButton btnAltClient;
    private javax.swing.JToggleButton btnAltFunc;
    private javax.swing.JToggleButton btnAltHor;
    private javax.swing.JButton btnAltRem;
    private javax.swing.JToggleButton btnAltServ;
    private javax.swing.JButton btnBackAgenda;
    private javax.swing.JButton btnBackAtendimentos;
    private javax.swing.JButton btnBackCadCliente;
    private javax.swing.JButton btnBackCadFunc;
    private javax.swing.JButton btnBackMarcar;
    private javax.swing.JButton btnBackRelato;
    private javax.swing.JButton btnBackRemarcar;
    private javax.swing.JButton btnBackServ;
    private javax.swing.JButton btnCadFunc;
    private javax.swing.JButton btnCadastroAtendimento;
    public javax.swing.JButton btnCadastroCliente;
    private javax.swing.JButton btnCadastroServico;
    private javax.swing.JButton btnClienteRelato;
    private javax.swing.JButton btnClienteSitRelato;
    public javax.swing.JButton btnConfDelCliente;
    private javax.swing.JButton btnConfDelFunc;
    public javax.swing.JButton btnDeleteCliente;
    private javax.swing.JButton btnDeleteFuncionario;
    private javax.swing.JButton btnFuncRelato;
    private javax.swing.JButton btnMenuAgenda;
    private javax.swing.JButton btnMenuAtendimento;
    private javax.swing.JButton btnMenuCliente;
    private javax.swing.JButton btnMenuFuncionario;
    private javax.swing.JButton btnMenuMarcar;
    private javax.swing.JButton btnMenuRelatorios;
    private javax.swing.JButton btnMenuRemarcar;
    private javax.swing.JButton btnMenuServico;
    public javax.swing.JButton btnNegDelCliente;
    private javax.swing.JButton btnNegDelFunc;
    private javax.swing.JButton btnRelCdg;
    private javax.swing.JButton btnRelData;
    private javax.swing.JButton btnRelNome;
    private javax.swing.JButton btnRelatoPorCleinte;
    private javax.swing.JButton btnServRelato;
    private javax.swing.JButton btnVerfAgd;
    private javax.swing.JButton btnVerfAgenda;
    private javax.swing.JButton btnVerfAtend;
    private javax.swing.JButton btnVerfClient;
    private javax.swing.JButton btnVerfFunc;
    private javax.swing.JButton btnVerfHoraDisp;
    private javax.swing.JButton btnVerfMarcar;
    private javax.swing.JButton btnVerfRem;
    private javax.swing.JButton btnVerfServ;
    private javax.swing.JScrollPane jPanelServ;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jpanelListaFuncAtendmiento;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lblAtend;
    private javax.swing.JLabel lblCadClienteCpf;
    private javax.swing.JLabel lblCadClienteEmail;
    private javax.swing.JLabel lblCadClienteEndereco;
    public javax.swing.JLabel lblCadClienteErro;
    private javax.swing.JLabel lblCadClienteEstCivil;
    private javax.swing.JLabel lblCadClienteNasc;
    private javax.swing.JLabel lblCadClienteSituacao;
    private javax.swing.JLabel lblCadClienteTelefone;
    private javax.swing.JLabel lblCadClienteTipo;
    private javax.swing.JLabel lblCadFuncCpf;
    private javax.swing.JLabel lblCadFuncEmail;
    public javax.swing.JLabel lblCadFuncErro;
    private javax.swing.JLabel lblCadFuncNome;
    private javax.swing.JLabel lblCadFuncSituacao;
    private javax.swing.JLabel lblCadFuncTel;
    private javax.swing.JLabel lblCastroNomeCliente;
    private javax.swing.JLabel lblClientHor;
    private javax.swing.JLabel lblClientRerm;
    private javax.swing.JLabel lblDataAgenda;
    private javax.swing.JLabel lblDataAtendmiento;
    private javax.swing.JLabel lblDataMarcar;
    private javax.swing.JLabel lblDelCliente;
    private javax.swing.JLabel lblDescAtendmiento;
    private javax.swing.JLabel lblDescServ;
    public javax.swing.JLabel lblErroServ;
    private javax.swing.JLabel lblFuncMarcar;
    private javax.swing.JLabel lblFuncRem;
    private javax.swing.JLabel lblFuncionariosAtendmiento;
    private javax.swing.JLabel lblHorarioAtendmiento;
    private javax.swing.JLabel lblHorarioMarcar;
    private javax.swing.JLabel lblMarc;
    private javax.swing.JLabel lblMarcServ;
    private javax.swing.JLabel lblMenuPrincipal;
    private javax.swing.JLabel lblNomeClienteAtendmiento;
    private javax.swing.JLabel lblNomeServ;
    private javax.swing.JLabel lblRelato;
    private javax.swing.JLabel lblRem;
    private javax.swing.JLabel lblServAtend;
    private javax.swing.JLabel lblServRem;
    private javax.swing.JLabel lblStatusAtendmiento;
    private javax.swing.JLabel lblTituloAgenda;
    private javax.swing.JLabel lblTituloAtendimento;
    private javax.swing.JLabel lblTituloCadFunc;
    private javax.swing.JLabel lblTituloClientes;
    private javax.swing.JLabel lblTituloMarcar;
    private javax.swing.JLabel lblTituloRemarcar;
    private javax.swing.JLabel lblTituloServico;
    public static javax.swing.JLabel lblVerificaBanco;
    private javax.swing.JList<String> listClienteDispo;
    private javax.swing.JList<String> listFuncDispo;
    private javax.swing.JList listFuncRem;
    private javax.swing.JList<String> listMarcCliente;
    private javax.swing.JList listMarcFunc;
    private javax.swing.JList<String> listMarcServ;
    private javax.swing.JList<String> listServAtend;
    private javax.swing.JList listStatusAtendmiento;
    private javax.swing.JPanel marcarhorario;
    private javax.swing.JPanel menuPrincipal;
    private javax.swing.JScrollPane panelFuncRemarcar;
    private javax.swing.JScrollPane panelMarcar;
    private javax.swing.JScrollPane panelRelato;
    private javax.swing.JScrollPane panelStatusAtendimento;
    private javax.swing.JScrollPane panelTxtAtendmiento;
    private javax.swing.JPanel relatorios;
    private javax.swing.JPanel remarcarhorario;
    private javax.swing.JPanel servicos;
    private javax.swing.JTextArea txtAgenDia;
    private javax.swing.JTextArea txtAreaRelato;
    private javax.swing.JTextField txtCadClienteCpf;
    private javax.swing.JTextField txtCadClienteEmail;
    private javax.swing.JTextField txtCadClienteEndereco;
    private javax.swing.JTextField txtCadClienteEstCivil;
    private javax.swing.JTextField txtCadClienteNasc;
    private javax.swing.JTextField txtCadClienteTelefone;
    private javax.swing.JTextField txtCadClienteTipo;
    private javax.swing.JTextField txtCadFunc;
    private javax.swing.JTextField txtCadFuncCpf;
    private javax.swing.JTextField txtCadFuncEmail;
    private javax.swing.JTextField txtCadFuncTel;
    private javax.swing.JTextField txtClienteRem;
    private javax.swing.JTextField txtDataAgenda;
    private javax.swing.JTextField txtDataAtendimento;
    private javax.swing.JTextField txtDataMarcar;
    private javax.swing.JTextField txtDataRem;
    private javax.swing.JTextArea txtDescAtendmiento;
    private javax.swing.JTextArea txtDescServ;
    private javax.swing.JTextField txtHoraRem;
    private javax.swing.JTextField txtHorarioAtendimento;
    private javax.swing.JTextField txtHorarioMarcar;
    private javax.swing.JTextField txtNomeCadClient;
    private javax.swing.JTextField txtNomeServ;
    private javax.swing.JTextField txtServRem;
    private javax.swing.JTextField txtVerfAgd;
    // End of variables declaration//GEN-END:variables

}
